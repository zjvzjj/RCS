// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "SendSimpleMsgNotify.pb.h"

@implementation SendSimpleMsgNotifyRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SendSimpleMsgNotifyRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface SendSimpleMsgNotify ()
@property (retain) NSString* fromBopId;
@property (retain) NSString* message;
@end

@implementation SendSimpleMsgNotify

- (BOOL) hasFromBopId {
  return !!hasFromBopId_;
}
- (void) setHasFromBopId:(BOOL) value_ {
  hasFromBopId_ = !!value_;
}
@synthesize fromBopId;
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) value_ {
  hasMessage_ = !!value_;
}
@synthesize message;
- (void) dealloc {
  self.fromBopId = nil;
  self.message = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.fromBopId = @"";
    self.message = @"";
  }
  return self;
}
static SendSimpleMsgNotify* defaultSendSimpleMsgNotifyInstance = nil;
+ (void) initialize {
  if (self == [SendSimpleMsgNotify class]) {
    defaultSendSimpleMsgNotifyInstance = [[SendSimpleMsgNotify alloc] init];
  }
}
+ (SendSimpleMsgNotify*) defaultInstance {
  return defaultSendSimpleMsgNotifyInstance;
}
- (SendSimpleMsgNotify*) defaultInstance {
  return defaultSendSimpleMsgNotifyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFromBopId) {
    return NO;
  }
  if (!self.hasMessage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFromBopId) {
    [output writeString:1 value:self.fromBopId];
  }
  if (self.hasMessage) {
    [output writeString:2 value:self.message];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFromBopId) {
    size_ += computeStringSize(1, self.fromBopId);
  }
  if (self.hasMessage) {
    size_ += computeStringSize(2, self.message);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SendSimpleMsgNotify*) parseFromData:(NSData*) data {
  return (SendSimpleMsgNotify*)[[[SendSimpleMsgNotify builder] mergeFromData:data] build];
}
+ (SendSimpleMsgNotify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendSimpleMsgNotify*)[[[SendSimpleMsgNotify builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SendSimpleMsgNotify*) parseFromInputStream:(NSInputStream*) input {
  return (SendSimpleMsgNotify*)[[[SendSimpleMsgNotify builder] mergeFromInputStream:input] build];
}
+ (SendSimpleMsgNotify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendSimpleMsgNotify*)[[[SendSimpleMsgNotify builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendSimpleMsgNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SendSimpleMsgNotify*)[[[SendSimpleMsgNotify builder] mergeFromCodedInputStream:input] build];
}
+ (SendSimpleMsgNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendSimpleMsgNotify*)[[[SendSimpleMsgNotify builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendSimpleMsgNotify_Builder*) builder {
  return [[[SendSimpleMsgNotify_Builder alloc] init] autorelease];
}
+ (SendSimpleMsgNotify_Builder*) builderWithPrototype:(SendSimpleMsgNotify*) prototype {
  return [[SendSimpleMsgNotify builder] mergeFrom:prototype];
}
- (SendSimpleMsgNotify_Builder*) builder {
  return [SendSimpleMsgNotify builder];
}
- (SendSimpleMsgNotify_Builder*) toBuilder {
  return [SendSimpleMsgNotify builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFromBopId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromBopId", self.fromBopId];
  }
  if (self.hasMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"message", self.message];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SendSimpleMsgNotify class]]) {
    return NO;
  }
  SendSimpleMsgNotify *otherMessage = other;
  return
      self.hasFromBopId == otherMessage.hasFromBopId &&
      (!self.hasFromBopId || [self.fromBopId isEqual:otherMessage.fromBopId]) &&
      self.hasMessage == otherMessage.hasMessage &&
      (!self.hasMessage || [self.message isEqual:otherMessage.message]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasFromBopId) {
    hashCode = hashCode * 31 + [self.fromBopId hash];
  }
  if (self.hasMessage) {
    hashCode = hashCode * 31 + [self.message hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SendSimpleMsgNotify_Builder()
@property (retain) SendSimpleMsgNotify* result;
@end

@implementation SendSimpleMsgNotify_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SendSimpleMsgNotify alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SendSimpleMsgNotify_Builder*) clear {
  self.result = [[[SendSimpleMsgNotify alloc] init] autorelease];
  return self;
}
- (SendSimpleMsgNotify_Builder*) clone {
  return [SendSimpleMsgNotify builderWithPrototype:result];
}
- (SendSimpleMsgNotify*) defaultInstance {
  return [SendSimpleMsgNotify defaultInstance];
}
- (SendSimpleMsgNotify*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SendSimpleMsgNotify*) buildPartial {
  SendSimpleMsgNotify* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SendSimpleMsgNotify_Builder*) mergeFrom:(SendSimpleMsgNotify*) other {
  if (other == [SendSimpleMsgNotify defaultInstance]) {
    return self;
  }
  if (other.hasFromBopId) {
    [self setFromBopId:other.fromBopId];
  }
  if (other.hasMessage) {
    [self setMessage:other.message];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SendSimpleMsgNotify_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SendSimpleMsgNotify_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFromBopId:[input readString]];
        break;
      }
      case 18: {
        [self setMessage:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasFromBopId {
  return result.hasFromBopId;
}
- (NSString*) fromBopId {
  return result.fromBopId;
}
- (SendSimpleMsgNotify_Builder*) setFromBopId:(NSString*) value {
  result.hasFromBopId = YES;
  result.fromBopId = value;
  return self;
}
- (SendSimpleMsgNotify_Builder*) clearFromBopId {
  result.hasFromBopId = NO;
  result.fromBopId = @"";
  return self;
}
- (BOOL) hasMessage {
  return result.hasMessage;
}
- (NSString*) message {
  return result.message;
}
- (SendSimpleMsgNotify_Builder*) setMessage:(NSString*) value {
  result.hasMessage = YES;
  result.message = value;
  return self;
}
- (SendSimpleMsgNotify_Builder*) clearMessage {
  result.hasMessage = NO;
  result.message = @"";
  return self;
}
@end

