// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "RtcReplyReqArgs.pb.h"

@implementation RtcReplyReqArgsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [RtcReplyReqArgsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface RtcReplyReqArgs ()
@property (retain) RtcReplyReqArgs_CallInfo* callInfo;
@property (retain) NSString* sdp;
@property int32_t statusCode;
@end

@implementation RtcReplyReqArgs

- (BOOL) hasCallInfo {
  return !!hasCallInfo_;
}
- (void) setHasCallInfo:(BOOL) value_ {
  hasCallInfo_ = !!value_;
}
@synthesize callInfo;
- (BOOL) hasSdp {
  return !!hasSdp_;
}
- (void) setHasSdp:(BOOL) value_ {
  hasSdp_ = !!value_;
}
@synthesize sdp;
- (BOOL) hasStatusCode {
  return !!hasStatusCode_;
}
- (void) setHasStatusCode:(BOOL) value_ {
  hasStatusCode_ = !!value_;
}
@synthesize statusCode;
- (void) dealloc {
  self.callInfo = nil;
  self.sdp = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.callInfo = [RtcReplyReqArgs_CallInfo defaultInstance];
    self.sdp = @"";
    self.statusCode = 0;
  }
  return self;
}
static RtcReplyReqArgs* defaultRtcReplyReqArgsInstance = nil;
+ (void) initialize {
  if (self == [RtcReplyReqArgs class]) {
    defaultRtcReplyReqArgsInstance = [[RtcReplyReqArgs alloc] init];
  }
}
+ (RtcReplyReqArgs*) defaultInstance {
  return defaultRtcReplyReqArgsInstance;
}
- (RtcReplyReqArgs*) defaultInstance {
  return defaultRtcReplyReqArgsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCallInfo) {
    [output writeMessage:1 value:self.callInfo];
  }
  if (self.hasSdp) {
    [output writeString:2 value:self.sdp];
  }
  if (self.hasStatusCode) {
    [output writeInt32:3 value:self.statusCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCallInfo) {
    size_ += computeMessageSize(1, self.callInfo);
  }
  if (self.hasSdp) {
    size_ += computeStringSize(2, self.sdp);
  }
  if (self.hasStatusCode) {
    size_ += computeInt32Size(3, self.statusCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RtcReplyReqArgs*) parseFromData:(NSData*) data {
  return (RtcReplyReqArgs*)[[[RtcReplyReqArgs builder] mergeFromData:data] build];
}
+ (RtcReplyReqArgs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RtcReplyReqArgs*)[[[RtcReplyReqArgs builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RtcReplyReqArgs*) parseFromInputStream:(NSInputStream*) input {
  return (RtcReplyReqArgs*)[[[RtcReplyReqArgs builder] mergeFromInputStream:input] build];
}
+ (RtcReplyReqArgs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RtcReplyReqArgs*)[[[RtcReplyReqArgs builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RtcReplyReqArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RtcReplyReqArgs*)[[[RtcReplyReqArgs builder] mergeFromCodedInputStream:input] build];
}
+ (RtcReplyReqArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RtcReplyReqArgs*)[[[RtcReplyReqArgs builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RtcReplyReqArgs_Builder*) builder {
  return [[[RtcReplyReqArgs_Builder alloc] init] autorelease];
}
+ (RtcReplyReqArgs_Builder*) builderWithPrototype:(RtcReplyReqArgs*) prototype {
  return [[RtcReplyReqArgs builder] mergeFrom:prototype];
}
- (RtcReplyReqArgs_Builder*) builder {
  return [RtcReplyReqArgs builder];
}
- (RtcReplyReqArgs_Builder*) toBuilder {
  return [RtcReplyReqArgs builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCallInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"callInfo"];
    [self.callInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasSdp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sdp", self.sdp];
  }
  if (self.hasStatusCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"statusCode", [NSNumber numberWithInt:self.statusCode]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RtcReplyReqArgs class]]) {
    return NO;
  }
  RtcReplyReqArgs *otherMessage = other;
  return
      self.hasCallInfo == otherMessage.hasCallInfo &&
      (!self.hasCallInfo || [self.callInfo isEqual:otherMessage.callInfo]) &&
      self.hasSdp == otherMessage.hasSdp &&
      (!self.hasSdp || [self.sdp isEqual:otherMessage.sdp]) &&
      self.hasStatusCode == otherMessage.hasStatusCode &&
      (!self.hasStatusCode || self.statusCode == otherMessage.statusCode) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasCallInfo) {
    hashCode = hashCode * 31 + [self.callInfo hash];
  }
  if (self.hasSdp) {
    hashCode = hashCode * 31 + [self.sdp hash];
  }
  if (self.hasStatusCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.statusCode] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RtcReplyReqArgs_CallInfo ()
@property (retain) NSString* peerUserId;
@property (retain) NSString* callId;
@end

@implementation RtcReplyReqArgs_CallInfo

- (BOOL) hasPeerUserId {
  return !!hasPeerUserId_;
}
- (void) setHasPeerUserId:(BOOL) value_ {
  hasPeerUserId_ = !!value_;
}
@synthesize peerUserId;
- (BOOL) hasCallId {
  return !!hasCallId_;
}
- (void) setHasCallId:(BOOL) value_ {
  hasCallId_ = !!value_;
}
@synthesize callId;
- (void) dealloc {
  self.peerUserId = nil;
  self.callId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.peerUserId = @"";
    self.callId = @"";
  }
  return self;
}
static RtcReplyReqArgs_CallInfo* defaultRtcReplyReqArgs_CallInfoInstance = nil;
+ (void) initialize {
  if (self == [RtcReplyReqArgs_CallInfo class]) {
    defaultRtcReplyReqArgs_CallInfoInstance = [[RtcReplyReqArgs_CallInfo alloc] init];
  }
}
+ (RtcReplyReqArgs_CallInfo*) defaultInstance {
  return defaultRtcReplyReqArgs_CallInfoInstance;
}
- (RtcReplyReqArgs_CallInfo*) defaultInstance {
  return defaultRtcReplyReqArgs_CallInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPeerUserId) {
    [output writeString:1 value:self.peerUserId];
  }
  if (self.hasCallId) {
    [output writeString:2 value:self.callId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPeerUserId) {
    size_ += computeStringSize(1, self.peerUserId);
  }
  if (self.hasCallId) {
    size_ += computeStringSize(2, self.callId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RtcReplyReqArgs_CallInfo*) parseFromData:(NSData*) data {
  return (RtcReplyReqArgs_CallInfo*)[[[RtcReplyReqArgs_CallInfo builder] mergeFromData:data] build];
}
+ (RtcReplyReqArgs_CallInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RtcReplyReqArgs_CallInfo*)[[[RtcReplyReqArgs_CallInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RtcReplyReqArgs_CallInfo*) parseFromInputStream:(NSInputStream*) input {
  return (RtcReplyReqArgs_CallInfo*)[[[RtcReplyReqArgs_CallInfo builder] mergeFromInputStream:input] build];
}
+ (RtcReplyReqArgs_CallInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RtcReplyReqArgs_CallInfo*)[[[RtcReplyReqArgs_CallInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RtcReplyReqArgs_CallInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RtcReplyReqArgs_CallInfo*)[[[RtcReplyReqArgs_CallInfo builder] mergeFromCodedInputStream:input] build];
}
+ (RtcReplyReqArgs_CallInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RtcReplyReqArgs_CallInfo*)[[[RtcReplyReqArgs_CallInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RtcReplyReqArgs_CallInfo_Builder*) builder {
  return [[[RtcReplyReqArgs_CallInfo_Builder alloc] init] autorelease];
}
+ (RtcReplyReqArgs_CallInfo_Builder*) builderWithPrototype:(RtcReplyReqArgs_CallInfo*) prototype {
  return [[RtcReplyReqArgs_CallInfo builder] mergeFrom:prototype];
}
- (RtcReplyReqArgs_CallInfo_Builder*) builder {
  return [RtcReplyReqArgs_CallInfo builder];
}
- (RtcReplyReqArgs_CallInfo_Builder*) toBuilder {
  return [RtcReplyReqArgs_CallInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPeerUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"peerUserId", self.peerUserId];
  }
  if (self.hasCallId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"callId", self.callId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RtcReplyReqArgs_CallInfo class]]) {
    return NO;
  }
  RtcReplyReqArgs_CallInfo *otherMessage = other;
  return
      self.hasPeerUserId == otherMessage.hasPeerUserId &&
      (!self.hasPeerUserId || [self.peerUserId isEqual:otherMessage.peerUserId]) &&
      self.hasCallId == otherMessage.hasCallId &&
      (!self.hasCallId || [self.callId isEqual:otherMessage.callId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPeerUserId) {
    hashCode = hashCode * 31 + [self.peerUserId hash];
  }
  if (self.hasCallId) {
    hashCode = hashCode * 31 + [self.callId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RtcReplyReqArgs_CallInfo_Builder()
@property (retain) RtcReplyReqArgs_CallInfo* result;
@end

@implementation RtcReplyReqArgs_CallInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RtcReplyReqArgs_CallInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RtcReplyReqArgs_CallInfo_Builder*) clear {
  self.result = [[[RtcReplyReqArgs_CallInfo alloc] init] autorelease];
  return self;
}
- (RtcReplyReqArgs_CallInfo_Builder*) clone {
  return [RtcReplyReqArgs_CallInfo builderWithPrototype:result];
}
- (RtcReplyReqArgs_CallInfo*) defaultInstance {
  return [RtcReplyReqArgs_CallInfo defaultInstance];
}
- (RtcReplyReqArgs_CallInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RtcReplyReqArgs_CallInfo*) buildPartial {
  RtcReplyReqArgs_CallInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RtcReplyReqArgs_CallInfo_Builder*) mergeFrom:(RtcReplyReqArgs_CallInfo*) other {
  if (other == [RtcReplyReqArgs_CallInfo defaultInstance]) {
    return self;
  }
  if (other.hasPeerUserId) {
    [self setPeerUserId:other.peerUserId];
  }
  if (other.hasCallId) {
    [self setCallId:other.callId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RtcReplyReqArgs_CallInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RtcReplyReqArgs_CallInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPeerUserId:[input readString]];
        break;
      }
      case 18: {
        [self setCallId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPeerUserId {
  return result.hasPeerUserId;
}
- (NSString*) peerUserId {
  return result.peerUserId;
}
- (RtcReplyReqArgs_CallInfo_Builder*) setPeerUserId:(NSString*) value {
  result.hasPeerUserId = YES;
  result.peerUserId = value;
  return self;
}
- (RtcReplyReqArgs_CallInfo_Builder*) clearPeerUserId {
  result.hasPeerUserId = NO;
  result.peerUserId = @"";
  return self;
}
- (BOOL) hasCallId {
  return result.hasCallId;
}
- (NSString*) callId {
  return result.callId;
}
- (RtcReplyReqArgs_CallInfo_Builder*) setCallId:(NSString*) value {
  result.hasCallId = YES;
  result.callId = value;
  return self;
}
- (RtcReplyReqArgs_CallInfo_Builder*) clearCallId {
  result.hasCallId = NO;
  result.callId = @"";
  return self;
}
@end

@interface RtcReplyReqArgs_Builder()
@property (retain) RtcReplyReqArgs* result;
@end

@implementation RtcReplyReqArgs_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RtcReplyReqArgs alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RtcReplyReqArgs_Builder*) clear {
  self.result = [[[RtcReplyReqArgs alloc] init] autorelease];
  return self;
}
- (RtcReplyReqArgs_Builder*) clone {
  return [RtcReplyReqArgs builderWithPrototype:result];
}
- (RtcReplyReqArgs*) defaultInstance {
  return [RtcReplyReqArgs defaultInstance];
}
- (RtcReplyReqArgs*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RtcReplyReqArgs*) buildPartial {
  RtcReplyReqArgs* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RtcReplyReqArgs_Builder*) mergeFrom:(RtcReplyReqArgs*) other {
  if (other == [RtcReplyReqArgs defaultInstance]) {
    return self;
  }
  if (other.hasCallInfo) {
    [self mergeCallInfo:other.callInfo];
  }
  if (other.hasSdp) {
    [self setSdp:other.sdp];
  }
  if (other.hasStatusCode) {
    [self setStatusCode:other.statusCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RtcReplyReqArgs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RtcReplyReqArgs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RtcReplyReqArgs_CallInfo_Builder* subBuilder = [RtcReplyReqArgs_CallInfo builder];
        if (self.hasCallInfo) {
          [subBuilder mergeFrom:self.callInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCallInfo:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setSdp:[input readString]];
        break;
      }
      case 24: {
        [self setStatusCode:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCallInfo {
  return result.hasCallInfo;
}
- (RtcReplyReqArgs_CallInfo*) callInfo {
  return result.callInfo;
}
- (RtcReplyReqArgs_Builder*) setCallInfo:(RtcReplyReqArgs_CallInfo*) value {
  result.hasCallInfo = YES;
  result.callInfo = value;
  return self;
}
- (RtcReplyReqArgs_Builder*) setCallInfoBuilder:(RtcReplyReqArgs_CallInfo_Builder*) builderForValue {
  return [self setCallInfo:[builderForValue build]];
}
- (RtcReplyReqArgs_Builder*) mergeCallInfo:(RtcReplyReqArgs_CallInfo*) value {
  if (result.hasCallInfo &&
      result.callInfo != [RtcReplyReqArgs_CallInfo defaultInstance]) {
    result.callInfo =
      [[[RtcReplyReqArgs_CallInfo builderWithPrototype:result.callInfo] mergeFrom:value] buildPartial];
  } else {
    result.callInfo = value;
  }
  result.hasCallInfo = YES;
  return self;
}
- (RtcReplyReqArgs_Builder*) clearCallInfo {
  result.hasCallInfo = NO;
  result.callInfo = [RtcReplyReqArgs_CallInfo defaultInstance];
  return self;
}
- (BOOL) hasSdp {
  return result.hasSdp;
}
- (NSString*) sdp {
  return result.sdp;
}
- (RtcReplyReqArgs_Builder*) setSdp:(NSString*) value {
  result.hasSdp = YES;
  result.sdp = value;
  return self;
}
- (RtcReplyReqArgs_Builder*) clearSdp {
  result.hasSdp = NO;
  result.sdp = @"";
  return self;
}
- (BOOL) hasStatusCode {
  return result.hasStatusCode;
}
- (int32_t) statusCode {
  return result.statusCode;
}
- (RtcReplyReqArgs_Builder*) setStatusCode:(int32_t) value {
  result.hasStatusCode = YES;
  result.statusCode = value;
  return self;
}
- (RtcReplyReqArgs_Builder*) clearStatusCode {
  result.hasStatusCode = NO;
  result.statusCode = 0;
  return self;
}
@end

