// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "SetGroupInfoArgs.pb.h"
// @@protoc_insertion_point(imports)

@implementation SetGroupInfoArgsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SetGroupInfoArgsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL UpdateGroupFieldFlagsIsValidValue(UpdateGroupFieldFlags value) {
  switch (value) {
    case UpdateGroupFieldFlagsGroupName:
    case UpdateGroupFieldFlagsGroupConfig:
    case UpdateGroupFieldFlagsGroupPortraitUrl:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromUpdateGroupFieldFlags(UpdateGroupFieldFlags value) {
  switch (value) {
    case UpdateGroupFieldFlagsGroupName:
      return @"UpdateGroupFieldFlagsGroupName";
    case UpdateGroupFieldFlagsGroupConfig:
      return @"UpdateGroupFieldFlagsGroupConfig";
    case UpdateGroupFieldFlagsGroupPortraitUrl:
      return @"UpdateGroupFieldFlagsGroupPortraitUrl";
    default:
      return nil;
  }
}

@interface SetGroupInfoArgs ()
@property (strong) NSString* groupId;
@property (strong) NSString* groupName;
@property SInt32 groupConfig;
@property UpdateGroupFieldFlags updateFieldFlags;
@property (strong) NSString* groupPortraitUrl;
@end

@implementation SetGroupInfoArgs

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasGroupName {
  return !!hasGroupName_;
}
- (void) setHasGroupName:(BOOL) _value_ {
  hasGroupName_ = !!_value_;
}
@synthesize groupName;
- (BOOL) hasGroupConfig {
  return !!hasGroupConfig_;
}
- (void) setHasGroupConfig:(BOOL) _value_ {
  hasGroupConfig_ = !!_value_;
}
@synthesize groupConfig;
- (BOOL) hasUpdateFieldFlags {
  return !!hasUpdateFieldFlags_;
}
- (void) setHasUpdateFieldFlags:(BOOL) _value_ {
  hasUpdateFieldFlags_ = !!_value_;
}
@synthesize updateFieldFlags;
- (BOOL) hasGroupPortraitUrl {
  return !!hasGroupPortraitUrl_;
}
- (void) setHasGroupPortraitUrl:(BOOL) _value_ {
  hasGroupPortraitUrl_ = !!_value_;
}
@synthesize groupPortraitUrl;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = @"";
    self.groupName = @"";
    self.groupConfig = 0;
    self.updateFieldFlags = UpdateGroupFieldFlagsGroupName;
    self.groupPortraitUrl = @"";
  }
  return self;
}
static SetGroupInfoArgs* defaultSetGroupInfoArgsInstance = nil;
+ (void) initialize {
  if (self == [SetGroupInfoArgs class]) {
    defaultSetGroupInfoArgsInstance = [[SetGroupInfoArgs alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSetGroupInfoArgsInstance;
}
- (instancetype) defaultInstance {
  return defaultSetGroupInfoArgsInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGroupId) {
    return NO;
  }
  if (!self.hasGroupName) {
    return NO;
  }
  if (!self.hasGroupConfig) {
    return NO;
  }
  if (!self.hasUpdateFieldFlags) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeString:1 value:self.groupId];
  }
  if (self.hasGroupName) {
    [output writeString:2 value:self.groupName];
  }
  if (self.hasGroupConfig) {
    [output writeInt32:3 value:self.groupConfig];
  }
  if (self.hasUpdateFieldFlags) {
    [output writeEnum:4 value:self.updateFieldFlags];
  }
  if (self.hasGroupPortraitUrl) {
    [output writeString:5 value:self.groupPortraitUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeStringSize(1, self.groupId);
  }
  if (self.hasGroupName) {
    size_ += computeStringSize(2, self.groupName);
  }
  if (self.hasGroupConfig) {
    size_ += computeInt32Size(3, self.groupConfig);
  }
  if (self.hasUpdateFieldFlags) {
    size_ += computeEnumSize(4, self.updateFieldFlags);
  }
  if (self.hasGroupPortraitUrl) {
    size_ += computeStringSize(5, self.groupPortraitUrl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SetGroupInfoArgs*) parseFromData:(NSData*) data {
  return (SetGroupInfoArgs*)[[[SetGroupInfoArgs builder] mergeFromData:data] build];
}
+ (SetGroupInfoArgs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupInfoArgs*)[[[SetGroupInfoArgs builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SetGroupInfoArgs*) parseFromInputStream:(NSInputStream*) input {
  return (SetGroupInfoArgs*)[[[SetGroupInfoArgs builder] mergeFromInputStream:input] build];
}
+ (SetGroupInfoArgs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupInfoArgs*)[[[SetGroupInfoArgs builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupInfoArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SetGroupInfoArgs*)[[[SetGroupInfoArgs builder] mergeFromCodedInputStream:input] build];
}
+ (SetGroupInfoArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupInfoArgs*)[[[SetGroupInfoArgs builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupInfoArgsBuilder*) builder {
  return [[SetGroupInfoArgsBuilder alloc] init];
}
+ (SetGroupInfoArgsBuilder*) builderWithPrototype:(SetGroupInfoArgs*) prototype {
  return [[SetGroupInfoArgs builder] mergeFrom:prototype];
}
- (SetGroupInfoArgsBuilder*) builder {
  return [SetGroupInfoArgs builder];
}
- (SetGroupInfoArgsBuilder*) toBuilder {
  return [SetGroupInfoArgs builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasGroupName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupName", self.groupName];
  }
  if (self.hasGroupConfig) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupConfig", [NSNumber numberWithInteger:self.groupConfig]];
  }
  if (self.hasUpdateFieldFlags) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateFieldFlags", NSStringFromUpdateGroupFieldFlags(self.updateFieldFlags)];
  }
  if (self.hasGroupPortraitUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupPortraitUrl", self.groupPortraitUrl];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SetGroupInfoArgs class]]) {
    return NO;
  }
  SetGroupInfoArgs *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasGroupName == otherMessage.hasGroupName &&
      (!self.hasGroupName || [self.groupName isEqual:otherMessage.groupName]) &&
      self.hasGroupConfig == otherMessage.hasGroupConfig &&
      (!self.hasGroupConfig || self.groupConfig == otherMessage.groupConfig) &&
      self.hasUpdateFieldFlags == otherMessage.hasUpdateFieldFlags &&
      (!self.hasUpdateFieldFlags || self.updateFieldFlags == otherMessage.updateFieldFlags) &&
      self.hasGroupPortraitUrl == otherMessage.hasGroupPortraitUrl &&
      (!self.hasGroupPortraitUrl || [self.groupPortraitUrl isEqual:otherMessage.groupPortraitUrl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasGroupName) {
    hashCode = hashCode * 31 + [self.groupName hash];
  }
  if (self.hasGroupConfig) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.groupConfig] hash];
  }
  if (self.hasUpdateFieldFlags) {
    hashCode = hashCode * 31 + self.updateFieldFlags;
  }
  if (self.hasGroupPortraitUrl) {
    hashCode = hashCode * 31 + [self.groupPortraitUrl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SetGroupInfoArgsBuilder()
@property (strong) SetGroupInfoArgs* resultSetGroupInfoArgs;
@end

@implementation SetGroupInfoArgsBuilder
@synthesize resultSetGroupInfoArgs;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSetGroupInfoArgs = [[SetGroupInfoArgs alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSetGroupInfoArgs;
}
- (SetGroupInfoArgsBuilder*) clear {
  self.resultSetGroupInfoArgs = [[SetGroupInfoArgs alloc] init];
  return self;
}
- (SetGroupInfoArgsBuilder*) clone {
  return [SetGroupInfoArgs builderWithPrototype:resultSetGroupInfoArgs];
}
- (SetGroupInfoArgs*) defaultInstance {
  return [SetGroupInfoArgs defaultInstance];
}
- (SetGroupInfoArgs*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SetGroupInfoArgs*) buildPartial {
  SetGroupInfoArgs* returnMe = resultSetGroupInfoArgs;
  self.resultSetGroupInfoArgs = nil;
  return returnMe;
}
- (SetGroupInfoArgsBuilder*) mergeFrom:(SetGroupInfoArgs*) other {
  if (other == [SetGroupInfoArgs defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasGroupName) {
    [self setGroupName:other.groupName];
  }
  if (other.hasGroupConfig) {
    [self setGroupConfig:other.groupConfig];
  }
  if (other.hasUpdateFieldFlags) {
    [self setUpdateFieldFlags:other.updateFieldFlags];
  }
  if (other.hasGroupPortraitUrl) {
    [self setGroupPortraitUrl:other.groupPortraitUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SetGroupInfoArgsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SetGroupInfoArgsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setGroupId:[input readString]];
        break;
      }
      case 18: {
        [self setGroupName:[input readString]];
        break;
      }
      case 24: {
        [self setGroupConfig:[input readInt32]];
        break;
      }
      case 32: {
        UpdateGroupFieldFlags value = (UpdateGroupFieldFlags)[input readEnum];
        if (UpdateGroupFieldFlagsIsValidValue(value)) {
          [self setUpdateFieldFlags:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 42: {
        [self setGroupPortraitUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultSetGroupInfoArgs.hasGroupId;
}
- (NSString*) groupId {
  return resultSetGroupInfoArgs.groupId;
}
- (SetGroupInfoArgsBuilder*) setGroupId:(NSString*) value {
  resultSetGroupInfoArgs.hasGroupId = YES;
  resultSetGroupInfoArgs.groupId = value;
  return self;
}
- (SetGroupInfoArgsBuilder*) clearGroupId {
  resultSetGroupInfoArgs.hasGroupId = NO;
  resultSetGroupInfoArgs.groupId = @"";
  return self;
}
- (BOOL) hasGroupName {
  return resultSetGroupInfoArgs.hasGroupName;
}
- (NSString*) groupName {
  return resultSetGroupInfoArgs.groupName;
}
- (SetGroupInfoArgsBuilder*) setGroupName:(NSString*) value {
  resultSetGroupInfoArgs.hasGroupName = YES;
  resultSetGroupInfoArgs.groupName = value;
  return self;
}
- (SetGroupInfoArgsBuilder*) clearGroupName {
  resultSetGroupInfoArgs.hasGroupName = NO;
  resultSetGroupInfoArgs.groupName = @"";
  return self;
}
- (BOOL) hasGroupConfig {
  return resultSetGroupInfoArgs.hasGroupConfig;
}
- (SInt32) groupConfig {
  return resultSetGroupInfoArgs.groupConfig;
}
- (SetGroupInfoArgsBuilder*) setGroupConfig:(SInt32) value {
  resultSetGroupInfoArgs.hasGroupConfig = YES;
  resultSetGroupInfoArgs.groupConfig = value;
  return self;
}
- (SetGroupInfoArgsBuilder*) clearGroupConfig {
  resultSetGroupInfoArgs.hasGroupConfig = NO;
  resultSetGroupInfoArgs.groupConfig = 0;
  return self;
}
- (BOOL) hasUpdateFieldFlags {
  return resultSetGroupInfoArgs.hasUpdateFieldFlags;
}
- (UpdateGroupFieldFlags) updateFieldFlags {
  return resultSetGroupInfoArgs.updateFieldFlags;
}
- (SetGroupInfoArgsBuilder*) setUpdateFieldFlags:(UpdateGroupFieldFlags) value {
  resultSetGroupInfoArgs.hasUpdateFieldFlags = YES;
  resultSetGroupInfoArgs.updateFieldFlags = value;
  return self;
}
- (SetGroupInfoArgsBuilder*) clearUpdateFieldFlags {
  resultSetGroupInfoArgs.hasUpdateFieldFlags = NO;
  resultSetGroupInfoArgs.updateFieldFlags = UpdateGroupFieldFlagsGroupName;
  return self;
}
- (BOOL) hasGroupPortraitUrl {
  return resultSetGroupInfoArgs.hasGroupPortraitUrl;
}
- (NSString*) groupPortraitUrl {
  return resultSetGroupInfoArgs.groupPortraitUrl;
}
- (SetGroupInfoArgsBuilder*) setGroupPortraitUrl:(NSString*) value {
  resultSetGroupInfoArgs.hasGroupPortraitUrl = YES;
  resultSetGroupInfoArgs.groupPortraitUrl = value;
  return self;
}
- (SetGroupInfoArgsBuilder*) clearGroupPortraitUrl {
  resultSetGroupInfoArgs.hasGroupPortraitUrl = NO;
  resultSetGroupInfoArgs.groupPortraitUrl = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
