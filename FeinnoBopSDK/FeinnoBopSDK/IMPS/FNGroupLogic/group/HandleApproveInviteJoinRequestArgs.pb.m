// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "HandleApproveInviteJoinRequestArgs.pb.h"
// @@protoc_insertion_point(imports)

@implementation HandleApproveInviteJoinRequestArgsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [HandleApproveInviteJoinRequestArgsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface HandleApproveInviteJoinRequestArgs ()
@property (strong) NSString* groupId;
@property (strong) NSString* sourceId;
@property (strong) NSMutableArray * handleApproveItemArray;
@end

@implementation HandleApproveInviteJoinRequestArgs

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasSourceId {
  return !!hasSourceId_;
}
- (void) setHasSourceId:(BOOL) _value_ {
  hasSourceId_ = !!_value_;
}
@synthesize sourceId;
@synthesize handleApproveItemArray;
@dynamic handleApproveItem;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = @"";
    self.sourceId = @"";
  }
  return self;
}
static HandleApproveInviteJoinRequestArgs* defaultHandleApproveInviteJoinRequestArgsInstance = nil;
+ (void) initialize {
  if (self == [HandleApproveInviteJoinRequestArgs class]) {
    defaultHandleApproveInviteJoinRequestArgsInstance = [[HandleApproveInviteJoinRequestArgs alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultHandleApproveInviteJoinRequestArgsInstance;
}
- (instancetype) defaultInstance {
  return defaultHandleApproveInviteJoinRequestArgsInstance;
}
- (NSArray *)handleApproveItem {
  return handleApproveItemArray;
}
- (HandleApproveItem*)handleApproveItemAtIndex:(NSUInteger)index {
  return [handleApproveItemArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasGroupId) {
    return NO;
  }
  if (!self.hasSourceId) {
    return NO;
  }
  __block BOOL isInithandleApproveItem = YES;
   [self.handleApproveItem enumerateObjectsUsingBlock:^(HandleApproveItem *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInithandleApproveItem = NO;
      *stop = YES;
    }
  }];
  if (!isInithandleApproveItem) return isInithandleApproveItem;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeString:1 value:self.groupId];
  }
  if (self.hasSourceId) {
    [output writeString:2 value:self.sourceId];
  }
  [self.handleApproveItemArray enumerateObjectsUsingBlock:^(HandleApproveItem *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeStringSize(1, self.groupId);
  }
  if (self.hasSourceId) {
    size_ += computeStringSize(2, self.sourceId);
  }
  [self.handleApproveItemArray enumerateObjectsUsingBlock:^(HandleApproveItem *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (HandleApproveInviteJoinRequestArgs*) parseFromData:(NSData*) data {
  return (HandleApproveInviteJoinRequestArgs*)[[[HandleApproveInviteJoinRequestArgs builder] mergeFromData:data] build];
}
+ (HandleApproveInviteJoinRequestArgs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HandleApproveInviteJoinRequestArgs*)[[[HandleApproveInviteJoinRequestArgs builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HandleApproveInviteJoinRequestArgs*) parseFromInputStream:(NSInputStream*) input {
  return (HandleApproveInviteJoinRequestArgs*)[[[HandleApproveInviteJoinRequestArgs builder] mergeFromInputStream:input] build];
}
+ (HandleApproveInviteJoinRequestArgs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HandleApproveInviteJoinRequestArgs*)[[[HandleApproveInviteJoinRequestArgs builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HandleApproveInviteJoinRequestArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HandleApproveInviteJoinRequestArgs*)[[[HandleApproveInviteJoinRequestArgs builder] mergeFromCodedInputStream:input] build];
}
+ (HandleApproveInviteJoinRequestArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HandleApproveInviteJoinRequestArgs*)[[[HandleApproveInviteJoinRequestArgs builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HandleApproveInviteJoinRequestArgsBuilder*) builder {
  return [[HandleApproveInviteJoinRequestArgsBuilder alloc] init];
}
+ (HandleApproveInviteJoinRequestArgsBuilder*) builderWithPrototype:(HandleApproveInviteJoinRequestArgs*) prototype {
  return [[HandleApproveInviteJoinRequestArgs builder] mergeFrom:prototype];
}
- (HandleApproveInviteJoinRequestArgsBuilder*) builder {
  return [HandleApproveInviteJoinRequestArgs builder];
}
- (HandleApproveInviteJoinRequestArgsBuilder*) toBuilder {
  return [HandleApproveInviteJoinRequestArgs builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasSourceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sourceId", self.sourceId];
  }
  [self.handleApproveItemArray enumerateObjectsUsingBlock:^(HandleApproveItem *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"handleApproveItem"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[HandleApproveInviteJoinRequestArgs class]]) {
    return NO;
  }
  HandleApproveInviteJoinRequestArgs *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasSourceId == otherMessage.hasSourceId &&
      (!self.hasSourceId || [self.sourceId isEqual:otherMessage.sourceId]) &&
      [self.handleApproveItemArray isEqualToArray:otherMessage.handleApproveItemArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasSourceId) {
    hashCode = hashCode * 31 + [self.sourceId hash];
  }
  [self.handleApproveItemArray enumerateObjectsUsingBlock:^(HandleApproveItem *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface HandleApproveInviteJoinRequestArgsBuilder()
@property (strong) HandleApproveInviteJoinRequestArgs* resultHandleApproveInviteJoinRequestArgs;
@end

@implementation HandleApproveInviteJoinRequestArgsBuilder
@synthesize resultHandleApproveInviteJoinRequestArgs;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHandleApproveInviteJoinRequestArgs = [[HandleApproveInviteJoinRequestArgs alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHandleApproveInviteJoinRequestArgs;
}
- (HandleApproveInviteJoinRequestArgsBuilder*) clear {
  self.resultHandleApproveInviteJoinRequestArgs = [[HandleApproveInviteJoinRequestArgs alloc] init];
  return self;
}
- (HandleApproveInviteJoinRequestArgsBuilder*) clone {
  return [HandleApproveInviteJoinRequestArgs builderWithPrototype:resultHandleApproveInviteJoinRequestArgs];
}
- (HandleApproveInviteJoinRequestArgs*) defaultInstance {
  return [HandleApproveInviteJoinRequestArgs defaultInstance];
}
- (HandleApproveInviteJoinRequestArgs*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HandleApproveInviteJoinRequestArgs*) buildPartial {
  HandleApproveInviteJoinRequestArgs* returnMe = resultHandleApproveInviteJoinRequestArgs;
  self.resultHandleApproveInviteJoinRequestArgs = nil;
  return returnMe;
}
- (HandleApproveInviteJoinRequestArgsBuilder*) mergeFrom:(HandleApproveInviteJoinRequestArgs*) other {
  if (other == [HandleApproveInviteJoinRequestArgs defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasSourceId) {
    [self setSourceId:other.sourceId];
  }
  if (other.handleApproveItemArray.count > 0) {
    if (resultHandleApproveInviteJoinRequestArgs.handleApproveItemArray == nil) {
      resultHandleApproveInviteJoinRequestArgs.handleApproveItemArray = [[NSMutableArray alloc] initWithArray:other.handleApproveItemArray];
    } else {
      [resultHandleApproveInviteJoinRequestArgs.handleApproveItemArray addObjectsFromArray:other.handleApproveItemArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HandleApproveInviteJoinRequestArgsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HandleApproveInviteJoinRequestArgsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setGroupId:[input readString]];
        break;
      }
      case 18: {
        [self setSourceId:[input readString]];
        break;
      }
      case 26: {
        HandleApproveItemBuilder* subBuilder = [HandleApproveItem builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addHandleApproveItem:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultHandleApproveInviteJoinRequestArgs.hasGroupId;
}
- (NSString*) groupId {
  return resultHandleApproveInviteJoinRequestArgs.groupId;
}
- (HandleApproveInviteJoinRequestArgsBuilder*) setGroupId:(NSString*) value {
  resultHandleApproveInviteJoinRequestArgs.hasGroupId = YES;
  resultHandleApproveInviteJoinRequestArgs.groupId = value;
  return self;
}
- (HandleApproveInviteJoinRequestArgsBuilder*) clearGroupId {
  resultHandleApproveInviteJoinRequestArgs.hasGroupId = NO;
  resultHandleApproveInviteJoinRequestArgs.groupId = @"";
  return self;
}
- (BOOL) hasSourceId {
  return resultHandleApproveInviteJoinRequestArgs.hasSourceId;
}
- (NSString*) sourceId {
  return resultHandleApproveInviteJoinRequestArgs.sourceId;
}
- (HandleApproveInviteJoinRequestArgsBuilder*) setSourceId:(NSString*) value {
  resultHandleApproveInviteJoinRequestArgs.hasSourceId = YES;
  resultHandleApproveInviteJoinRequestArgs.sourceId = value;
  return self;
}
- (HandleApproveInviteJoinRequestArgsBuilder*) clearSourceId {
  resultHandleApproveInviteJoinRequestArgs.hasSourceId = NO;
  resultHandleApproveInviteJoinRequestArgs.sourceId = @"";
  return self;
}
- (NSMutableArray *)handleApproveItem {
  return resultHandleApproveInviteJoinRequestArgs.handleApproveItemArray;
}
- (HandleApproveItem*)handleApproveItemAtIndex:(NSUInteger)index {
  return [resultHandleApproveInviteJoinRequestArgs handleApproveItemAtIndex:index];
}
- (HandleApproveInviteJoinRequestArgsBuilder *)addHandleApproveItem:(HandleApproveItem*)value {
  if (resultHandleApproveInviteJoinRequestArgs.handleApproveItemArray == nil) {
    resultHandleApproveInviteJoinRequestArgs.handleApproveItemArray = [[NSMutableArray alloc]init];
  }
  [resultHandleApproveInviteJoinRequestArgs.handleApproveItemArray addObject:value];
  return self;
}
- (HandleApproveInviteJoinRequestArgsBuilder *)setHandleApproveItemArray:(NSArray *)array {
  resultHandleApproveInviteJoinRequestArgs.handleApproveItemArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (HandleApproveInviteJoinRequestArgsBuilder *)clearHandleApproveItem {
  resultHandleApproveInviteJoinRequestArgs.handleApproveItemArray = nil;
  return self;
}
@end

@interface HandleApproveItem ()
@property (strong) NSString* invitedUserId;
@property (strong) NSString* invitedUserNickname;
@property BOOL approveResult;
@property (strong) NSString* invitedPortraitUrl;
@end

@implementation HandleApproveItem

- (BOOL) hasInvitedUserId {
  return !!hasInvitedUserId_;
}
- (void) setHasInvitedUserId:(BOOL) _value_ {
  hasInvitedUserId_ = !!_value_;
}
@synthesize invitedUserId;
- (BOOL) hasInvitedUserNickname {
  return !!hasInvitedUserNickname_;
}
- (void) setHasInvitedUserNickname:(BOOL) _value_ {
  hasInvitedUserNickname_ = !!_value_;
}
@synthesize invitedUserNickname;
- (BOOL) hasApproveResult {
  return !!hasApproveResult_;
}
- (void) setHasApproveResult:(BOOL) _value_ {
  hasApproveResult_ = !!_value_;
}
- (BOOL) approveResult {
  return !!approveResult_;
}
- (void) setApproveResult:(BOOL) _value_ {
  approveResult_ = !!_value_;
}
- (BOOL) hasInvitedPortraitUrl {
  return !!hasInvitedPortraitUrl_;
}
- (void) setHasInvitedPortraitUrl:(BOOL) _value_ {
  hasInvitedPortraitUrl_ = !!_value_;
}
@synthesize invitedPortraitUrl;
- (instancetype) init {
  if ((self = [super init])) {
    self.invitedUserId = @"";
    self.invitedUserNickname = @"";
    self.approveResult = NO;
    self.invitedPortraitUrl = @"";
  }
  return self;
}
static HandleApproveItem* defaultHandleApproveItemInstance = nil;
+ (void) initialize {
  if (self == [HandleApproveItem class]) {
    defaultHandleApproveItemInstance = [[HandleApproveItem alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultHandleApproveItemInstance;
}
- (instancetype) defaultInstance {
  return defaultHandleApproveItemInstance;
}
- (BOOL) isInitialized {
  if (!self.hasInvitedUserId) {
    return NO;
  }
  if (!self.hasInvitedUserNickname) {
    return NO;
  }
  if (!self.hasApproveResult) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasInvitedUserId) {
    [output writeString:1 value:self.invitedUserId];
  }
  if (self.hasInvitedUserNickname) {
    [output writeString:2 value:self.invitedUserNickname];
  }
  if (self.hasApproveResult) {
    [output writeBool:3 value:self.approveResult];
  }
  if (self.hasInvitedPortraitUrl) {
    [output writeString:4 value:self.invitedPortraitUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasInvitedUserId) {
    size_ += computeStringSize(1, self.invitedUserId);
  }
  if (self.hasInvitedUserNickname) {
    size_ += computeStringSize(2, self.invitedUserNickname);
  }
  if (self.hasApproveResult) {
    size_ += computeBoolSize(3, self.approveResult);
  }
  if (self.hasInvitedPortraitUrl) {
    size_ += computeStringSize(4, self.invitedPortraitUrl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (HandleApproveItem*) parseFromData:(NSData*) data {
  return (HandleApproveItem*)[[[HandleApproveItem builder] mergeFromData:data] build];
}
+ (HandleApproveItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HandleApproveItem*)[[[HandleApproveItem builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HandleApproveItem*) parseFromInputStream:(NSInputStream*) input {
  return (HandleApproveItem*)[[[HandleApproveItem builder] mergeFromInputStream:input] build];
}
+ (HandleApproveItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HandleApproveItem*)[[[HandleApproveItem builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HandleApproveItem*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HandleApproveItem*)[[[HandleApproveItem builder] mergeFromCodedInputStream:input] build];
}
+ (HandleApproveItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HandleApproveItem*)[[[HandleApproveItem builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HandleApproveItemBuilder*) builder {
  return [[HandleApproveItemBuilder alloc] init];
}
+ (HandleApproveItemBuilder*) builderWithPrototype:(HandleApproveItem*) prototype {
  return [[HandleApproveItem builder] mergeFrom:prototype];
}
- (HandleApproveItemBuilder*) builder {
  return [HandleApproveItem builder];
}
- (HandleApproveItemBuilder*) toBuilder {
  return [HandleApproveItem builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasInvitedUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"invitedUserId", self.invitedUserId];
  }
  if (self.hasInvitedUserNickname) {
    [output appendFormat:@"%@%@: %@\n", indent, @"invitedUserNickname", self.invitedUserNickname];
  }
  if (self.hasApproveResult) {
    [output appendFormat:@"%@%@: %@\n", indent, @"approveResult", [NSNumber numberWithBool:self.approveResult]];
  }
  if (self.hasInvitedPortraitUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"invitedPortraitUrl", self.invitedPortraitUrl];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[HandleApproveItem class]]) {
    return NO;
  }
  HandleApproveItem *otherMessage = other;
  return
      self.hasInvitedUserId == otherMessage.hasInvitedUserId &&
      (!self.hasInvitedUserId || [self.invitedUserId isEqual:otherMessage.invitedUserId]) &&
      self.hasInvitedUserNickname == otherMessage.hasInvitedUserNickname &&
      (!self.hasInvitedUserNickname || [self.invitedUserNickname isEqual:otherMessage.invitedUserNickname]) &&
      self.hasApproveResult == otherMessage.hasApproveResult &&
      (!self.hasApproveResult || self.approveResult == otherMessage.approveResult) &&
      self.hasInvitedPortraitUrl == otherMessage.hasInvitedPortraitUrl &&
      (!self.hasInvitedPortraitUrl || [self.invitedPortraitUrl isEqual:otherMessage.invitedPortraitUrl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasInvitedUserId) {
    hashCode = hashCode * 31 + [self.invitedUserId hash];
  }
  if (self.hasInvitedUserNickname) {
    hashCode = hashCode * 31 + [self.invitedUserNickname hash];
  }
  if (self.hasApproveResult) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.approveResult] hash];
  }
  if (self.hasInvitedPortraitUrl) {
    hashCode = hashCode * 31 + [self.invitedPortraitUrl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface HandleApproveItemBuilder()
@property (strong) HandleApproveItem* resultHandleApproveItem;
@end

@implementation HandleApproveItemBuilder
@synthesize resultHandleApproveItem;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHandleApproveItem = [[HandleApproveItem alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHandleApproveItem;
}
- (HandleApproveItemBuilder*) clear {
  self.resultHandleApproveItem = [[HandleApproveItem alloc] init];
  return self;
}
- (HandleApproveItemBuilder*) clone {
  return [HandleApproveItem builderWithPrototype:resultHandleApproveItem];
}
- (HandleApproveItem*) defaultInstance {
  return [HandleApproveItem defaultInstance];
}
- (HandleApproveItem*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HandleApproveItem*) buildPartial {
  HandleApproveItem* returnMe = resultHandleApproveItem;
  self.resultHandleApproveItem = nil;
  return returnMe;
}
- (HandleApproveItemBuilder*) mergeFrom:(HandleApproveItem*) other {
  if (other == [HandleApproveItem defaultInstance]) {
    return self;
  }
  if (other.hasInvitedUserId) {
    [self setInvitedUserId:other.invitedUserId];
  }
  if (other.hasInvitedUserNickname) {
    [self setInvitedUserNickname:other.invitedUserNickname];
  }
  if (other.hasApproveResult) {
    [self setApproveResult:other.approveResult];
  }
  if (other.hasInvitedPortraitUrl) {
    [self setInvitedPortraitUrl:other.invitedPortraitUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HandleApproveItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HandleApproveItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setInvitedUserId:[input readString]];
        break;
      }
      case 18: {
        [self setInvitedUserNickname:[input readString]];
        break;
      }
      case 24: {
        [self setApproveResult:[input readBool]];
        break;
      }
      case 34: {
        [self setInvitedPortraitUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasInvitedUserId {
  return resultHandleApproveItem.hasInvitedUserId;
}
- (NSString*) invitedUserId {
  return resultHandleApproveItem.invitedUserId;
}
- (HandleApproveItemBuilder*) setInvitedUserId:(NSString*) value {
  resultHandleApproveItem.hasInvitedUserId = YES;
  resultHandleApproveItem.invitedUserId = value;
  return self;
}
- (HandleApproveItemBuilder*) clearInvitedUserId {
  resultHandleApproveItem.hasInvitedUserId = NO;
  resultHandleApproveItem.invitedUserId = @"";
  return self;
}
- (BOOL) hasInvitedUserNickname {
  return resultHandleApproveItem.hasInvitedUserNickname;
}
- (NSString*) invitedUserNickname {
  return resultHandleApproveItem.invitedUserNickname;
}
- (HandleApproveItemBuilder*) setInvitedUserNickname:(NSString*) value {
  resultHandleApproveItem.hasInvitedUserNickname = YES;
  resultHandleApproveItem.invitedUserNickname = value;
  return self;
}
- (HandleApproveItemBuilder*) clearInvitedUserNickname {
  resultHandleApproveItem.hasInvitedUserNickname = NO;
  resultHandleApproveItem.invitedUserNickname = @"";
  return self;
}
- (BOOL) hasApproveResult {
  return resultHandleApproveItem.hasApproveResult;
}
- (BOOL) approveResult {
  return resultHandleApproveItem.approveResult;
}
- (HandleApproveItemBuilder*) setApproveResult:(BOOL) value {
  resultHandleApproveItem.hasApproveResult = YES;
  resultHandleApproveItem.approveResult = value;
  return self;
}
- (HandleApproveItemBuilder*) clearApproveResult {
  resultHandleApproveItem.hasApproveResult = NO;
  resultHandleApproveItem.approveResult = NO;
  return self;
}
- (BOOL) hasInvitedPortraitUrl {
  return resultHandleApproveItem.hasInvitedPortraitUrl;
}
- (NSString*) invitedPortraitUrl {
  return resultHandleApproveItem.invitedPortraitUrl;
}
- (HandleApproveItemBuilder*) setInvitedPortraitUrl:(NSString*) value {
  resultHandleApproveItem.hasInvitedPortraitUrl = YES;
  resultHandleApproveItem.invitedPortraitUrl = value;
  return self;
}
- (HandleApproveItemBuilder*) clearInvitedPortraitUrl {
  resultHandleApproveItem.hasInvitedPortraitUrl = NO;
  resultHandleApproveItem.invitedPortraitUrl = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
