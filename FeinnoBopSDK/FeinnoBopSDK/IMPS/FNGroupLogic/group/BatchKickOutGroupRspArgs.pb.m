// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "BatchKickOutGroupRspArgs.pb.h"
// @@protoc_insertion_point(imports)

@implementation BatchKickOutGroupRspArgsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [BatchKickOutGroupRspArgsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface BatchKickOutGroupRspArgs ()
@property SInt32 statusCode;
@property (strong) NSMutableArray * resultListArray;
@end

@implementation BatchKickOutGroupRspArgs

- (BOOL) hasStatusCode {
  return !!hasStatusCode_;
}
- (void) setHasStatusCode:(BOOL) _value_ {
  hasStatusCode_ = !!_value_;
}
@synthesize statusCode;
@synthesize resultListArray;
@dynamic resultList;
- (instancetype) init {
  if ((self = [super init])) {
    self.statusCode = 0;
  }
  return self;
}
static BatchKickOutGroupRspArgs* defaultBatchKickOutGroupRspArgsInstance = nil;
+ (void) initialize {
  if (self == [BatchKickOutGroupRspArgs class]) {
    defaultBatchKickOutGroupRspArgsInstance = [[BatchKickOutGroupRspArgs alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBatchKickOutGroupRspArgsInstance;
}
- (instancetype) defaultInstance {
  return defaultBatchKickOutGroupRspArgsInstance;
}
- (NSArray *)resultList {
  return resultListArray;
}
- (BatchKickOutGroupRspArgs_MemberResult*)resultListAtIndex:(NSUInteger)index {
  return [resultListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasStatusCode) {
    return NO;
  }
  __block BOOL isInitresultList = YES;
   [self.resultList enumerateObjectsUsingBlock:^(BatchKickOutGroupRspArgs_MemberResult *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitresultList = NO;
      *stop = YES;
    }
  }];
  if (!isInitresultList) return isInitresultList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatusCode) {
    [output writeInt32:1 value:self.statusCode];
  }
  [self.resultListArray enumerateObjectsUsingBlock:^(BatchKickOutGroupRspArgs_MemberResult *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatusCode) {
    size_ += computeInt32Size(1, self.statusCode);
  }
  [self.resultListArray enumerateObjectsUsingBlock:^(BatchKickOutGroupRspArgs_MemberResult *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BatchKickOutGroupRspArgs*) parseFromData:(NSData*) data {
  return (BatchKickOutGroupRspArgs*)[[[BatchKickOutGroupRspArgs builder] mergeFromData:data] build];
}
+ (BatchKickOutGroupRspArgs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BatchKickOutGroupRspArgs*)[[[BatchKickOutGroupRspArgs builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatchKickOutGroupRspArgs*) parseFromInputStream:(NSInputStream*) input {
  return (BatchKickOutGroupRspArgs*)[[[BatchKickOutGroupRspArgs builder] mergeFromInputStream:input] build];
}
+ (BatchKickOutGroupRspArgs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BatchKickOutGroupRspArgs*)[[[BatchKickOutGroupRspArgs builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatchKickOutGroupRspArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BatchKickOutGroupRspArgs*)[[[BatchKickOutGroupRspArgs builder] mergeFromCodedInputStream:input] build];
}
+ (BatchKickOutGroupRspArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BatchKickOutGroupRspArgs*)[[[BatchKickOutGroupRspArgs builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatchKickOutGroupRspArgs_Builder*) builder {
  return [[BatchKickOutGroupRspArgs_Builder alloc] init];
}
+ (BatchKickOutGroupRspArgs_Builder*) builderWithPrototype:(BatchKickOutGroupRspArgs*) prototype {
  return [[BatchKickOutGroupRspArgs builder] mergeFrom:prototype];
}
- (BatchKickOutGroupRspArgs_Builder*) builder {
  return [BatchKickOutGroupRspArgs builder];
}
- (BatchKickOutGroupRspArgs_Builder*) toBuilder {
  return [BatchKickOutGroupRspArgs builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatusCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"statusCode", [NSNumber numberWithInteger:self.statusCode]];
  }
  [self.resultListArray enumerateObjectsUsingBlock:^(BatchKickOutGroupRspArgs_MemberResult *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"resultList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BatchKickOutGroupRspArgs class]]) {
    return NO;
  }
  BatchKickOutGroupRspArgs *otherMessage = other;
  return
      self.hasStatusCode == otherMessage.hasStatusCode &&
      (!self.hasStatusCode || self.statusCode == otherMessage.statusCode) &&
      [self.resultListArray isEqualToArray:otherMessage.resultListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatusCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.statusCode] hash];
  }
  [self.resultListArray enumerateObjectsUsingBlock:^(BatchKickOutGroupRspArgs_MemberResult *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BatchKickOutGroupRspArgs_MemberResult ()
@property (strong) NSString* userId;
@property SInt32 statusCode;
@end

@implementation BatchKickOutGroupRspArgs_MemberResult

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasStatusCode {
  return !!hasStatusCode_;
}
- (void) setHasStatusCode:(BOOL) _value_ {
  hasStatusCode_ = !!_value_;
}
@synthesize statusCode;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.statusCode = 0;
  }
  return self;
}
static BatchKickOutGroupRspArgs_MemberResult* defaultBatchKickOutGroupRspArgs_MemberResultInstance = nil;
+ (void) initialize {
  if (self == [BatchKickOutGroupRspArgs_MemberResult class]) {
    defaultBatchKickOutGroupRspArgs_MemberResultInstance = [[BatchKickOutGroupRspArgs_MemberResult alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBatchKickOutGroupRspArgs_MemberResultInstance;
}
- (instancetype) defaultInstance {
  return defaultBatchKickOutGroupRspArgs_MemberResultInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasStatusCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasStatusCode) {
    [output writeInt32:2 value:self.statusCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeStringSize(1, self.userId);
  }
  if (self.hasStatusCode) {
    size_ += computeInt32Size(2, self.statusCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BatchKickOutGroupRspArgs_MemberResult*) parseFromData:(NSData*) data {
  return (BatchKickOutGroupRspArgs_MemberResult*)[[[BatchKickOutGroupRspArgs_MemberResult builder] mergeFromData:data] build];
}
+ (BatchKickOutGroupRspArgs_MemberResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BatchKickOutGroupRspArgs_MemberResult*)[[[BatchKickOutGroupRspArgs_MemberResult builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatchKickOutGroupRspArgs_MemberResult*) parseFromInputStream:(NSInputStream*) input {
  return (BatchKickOutGroupRspArgs_MemberResult*)[[[BatchKickOutGroupRspArgs_MemberResult builder] mergeFromInputStream:input] build];
}
+ (BatchKickOutGroupRspArgs_MemberResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BatchKickOutGroupRspArgs_MemberResult*)[[[BatchKickOutGroupRspArgs_MemberResult builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatchKickOutGroupRspArgs_MemberResult*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BatchKickOutGroupRspArgs_MemberResult*)[[[BatchKickOutGroupRspArgs_MemberResult builder] mergeFromCodedInputStream:input] build];
}
+ (BatchKickOutGroupRspArgs_MemberResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BatchKickOutGroupRspArgs_MemberResult*)[[[BatchKickOutGroupRspArgs_MemberResult builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatchKickOutGroupRspArgs_MemberResult_Builder*) builder {
  return [[BatchKickOutGroupRspArgs_MemberResult_Builder alloc] init];
}
+ (BatchKickOutGroupRspArgs_MemberResult_Builder*) builderWithPrototype:(BatchKickOutGroupRspArgs_MemberResult*) prototype {
  return [[BatchKickOutGroupRspArgs_MemberResult builder] mergeFrom:prototype];
}
- (BatchKickOutGroupRspArgs_MemberResult_Builder*) builder {
  return [BatchKickOutGroupRspArgs_MemberResult builder];
}
- (BatchKickOutGroupRspArgs_MemberResult_Builder*) toBuilder {
  return [BatchKickOutGroupRspArgs_MemberResult builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasStatusCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"statusCode", [NSNumber numberWithInteger:self.statusCode]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BatchKickOutGroupRspArgs_MemberResult class]]) {
    return NO;
  }
  BatchKickOutGroupRspArgs_MemberResult *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasStatusCode == otherMessage.hasStatusCode &&
      (!self.hasStatusCode || self.statusCode == otherMessage.statusCode) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasStatusCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.statusCode] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BatchKickOutGroupRspArgs_MemberResult_Builder()
@property (strong) BatchKickOutGroupRspArgs_MemberResult* resultResult;
@end

@implementation BatchKickOutGroupRspArgs_MemberResult_Builder
@synthesize resultResult;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultResult = [[BatchKickOutGroupRspArgs_MemberResult alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultResult;
}
- (BatchKickOutGroupRspArgs_MemberResult_Builder*) clear {
  self.resultResult = [[BatchKickOutGroupRspArgs_MemberResult alloc] init];
  return self;
}
- (BatchKickOutGroupRspArgs_MemberResult_Builder*) clone {
  return [BatchKickOutGroupRspArgs_MemberResult builderWithPrototype:resultResult];
}
- (BatchKickOutGroupRspArgs_MemberResult*) defaultInstance {
  return [BatchKickOutGroupRspArgs_MemberResult defaultInstance];
}
- (BatchKickOutGroupRspArgs_MemberResult*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatchKickOutGroupRspArgs_MemberResult*) buildPartial {
  BatchKickOutGroupRspArgs_MemberResult* returnMe = resultResult;
  self.resultResult = nil;
  return returnMe;
}
- (BatchKickOutGroupRspArgs_MemberResult_Builder*) mergeFrom:(BatchKickOutGroupRspArgs_MemberResult*) other {
  if (other == [BatchKickOutGroupRspArgs_MemberResult defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasStatusCode) {
    [self setStatusCode:other.statusCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatchKickOutGroupRspArgs_MemberResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BatchKickOutGroupRspArgs_MemberResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 16: {
        [self setStatusCode:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultResult.hasUserId;
}
- (NSString*) userId {
  return resultResult.userId;
}
- (BatchKickOutGroupRspArgs_MemberResult_Builder*) setUserId:(NSString*) value {
  resultResult.hasUserId = YES;
  resultResult.userId = value;
  return self;
}
- (BatchKickOutGroupRspArgs_MemberResult_Builder*) clearUserId {
  resultResult.hasUserId = NO;
  resultResult.userId = @"";
  return self;
}
- (BOOL) hasStatusCode {
  return resultResult.hasStatusCode;
}
- (SInt32) statusCode {
  return resultResult.statusCode;
}
- (BatchKickOutGroupRspArgs_MemberResult_Builder*) setStatusCode:(SInt32) value {
  resultResult.hasStatusCode = YES;
  resultResult.statusCode = value;
  return self;
}
- (BatchKickOutGroupRspArgs_MemberResult_Builder*) clearStatusCode {
  resultResult.hasStatusCode = NO;
  resultResult.statusCode = 0;
  return self;
}
@end

@interface BatchKickOutGroupRspArgs_Builder()
@property (strong) BatchKickOutGroupRspArgs* resultBatchKickOutGroupRspArgs;
@end

@implementation BatchKickOutGroupRspArgs_Builder
@synthesize resultBatchKickOutGroupRspArgs;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBatchKickOutGroupRspArgs = [[BatchKickOutGroupRspArgs alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBatchKickOutGroupRspArgs;
}
- (BatchKickOutGroupRspArgs_Builder*) clear {
  self.resultBatchKickOutGroupRspArgs = [[BatchKickOutGroupRspArgs alloc] init];
  return self;
}
- (BatchKickOutGroupRspArgs_Builder*) clone {
  return [BatchKickOutGroupRspArgs builderWithPrototype:resultBatchKickOutGroupRspArgs];
}
- (BatchKickOutGroupRspArgs*) defaultInstance {
  return [BatchKickOutGroupRspArgs defaultInstance];
}
- (BatchKickOutGroupRspArgs*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatchKickOutGroupRspArgs*) buildPartial {
  BatchKickOutGroupRspArgs* returnMe = resultBatchKickOutGroupRspArgs;
  self.resultBatchKickOutGroupRspArgs = nil;
  return returnMe;
}
- (BatchKickOutGroupRspArgs_Builder*) mergeFrom:(BatchKickOutGroupRspArgs*) other {
  if (other == [BatchKickOutGroupRspArgs defaultInstance]) {
    return self;
  }
  if (other.hasStatusCode) {
    [self setStatusCode:other.statusCode];
  }
  if (other.resultListArray.count > 0) {
    if (resultBatchKickOutGroupRspArgs.resultListArray == nil) {
      resultBatchKickOutGroupRspArgs.resultListArray = [[NSMutableArray alloc] initWithArray:other.resultListArray];
    } else {
      [resultBatchKickOutGroupRspArgs.resultListArray addObjectsFromArray:other.resultListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatchKickOutGroupRspArgs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BatchKickOutGroupRspArgs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStatusCode:[input readInt32]];
        break;
      }
      case 18: {
        BatchKickOutGroupRspArgs_MemberResult_Builder* subBuilder = [BatchKickOutGroupRspArgs_MemberResult builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addResultList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStatusCode {
  return resultBatchKickOutGroupRspArgs.hasStatusCode;
}
- (SInt32) statusCode {
  return resultBatchKickOutGroupRspArgs.statusCode;
}
- (BatchKickOutGroupRspArgs_Builder*) setStatusCode:(SInt32) value {
  resultBatchKickOutGroupRspArgs.hasStatusCode = YES;
  resultBatchKickOutGroupRspArgs.statusCode = value;
  return self;
}
- (BatchKickOutGroupRspArgs_Builder*) clearStatusCode {
  resultBatchKickOutGroupRspArgs.hasStatusCode = NO;
  resultBatchKickOutGroupRspArgs.statusCode = 0;
  return self;
}
- (NSMutableArray *)resultList {
  return resultBatchKickOutGroupRspArgs.resultListArray;
}
- (BatchKickOutGroupRspArgs_MemberResult*)resultListAtIndex:(NSUInteger)index {
  return [resultBatchKickOutGroupRspArgs resultListAtIndex:index];
}
- (BatchKickOutGroupRspArgs_Builder *)addResultList:(BatchKickOutGroupRspArgs_MemberResult*)value {
  if (resultBatchKickOutGroupRspArgs.resultListArray == nil) {
    resultBatchKickOutGroupRspArgs.resultListArray = [[NSMutableArray alloc]init];
  }
  [resultBatchKickOutGroupRspArgs.resultListArray addObject:value];
  return self;
}
- (BatchKickOutGroupRspArgs_Builder *)setResultListArray:(NSArray *)array {
  resultBatchKickOutGroupRspArgs.resultListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (BatchKickOutGroupRspArgs_Builder *)clearResultList {
  resultBatchKickOutGroupRspArgs.resultListArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
