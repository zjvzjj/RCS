// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ApproveInviteJoinNtfArgs.pb.h"
// @@protoc_insertion_point(imports)

@implementation ApproveInviteJoinNtfArgsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ApproveInviteJoinNtfArgsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ApproveInviteJoinNtfArgs ()
@property (strong) NSString* groupId;
@property (strong) NSString* sourceUser;
@property (strong) NSMutableArray * approveListArray;
@property (strong) NSString* groupName;
@end

@implementation ApproveInviteJoinNtfArgs

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasSourceUser {
  return !!hasSourceUser_;
}
- (void) setHasSourceUser:(BOOL) _value_ {
  hasSourceUser_ = !!_value_;
}
@synthesize sourceUser;
@synthesize approveListArray;
@dynamic approveList;
- (BOOL) hasGroupName {
  return !!hasGroupName_;
}
- (void) setHasGroupName:(BOOL) _value_ {
  hasGroupName_ = !!_value_;
}
@synthesize groupName;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = @"";
    self.sourceUser = @"";
    self.groupName = @"";
  }
  return self;
}
static ApproveInviteJoinNtfArgs* defaultApproveInviteJoinNtfArgsInstance = nil;
+ (void) initialize {
  if (self == [ApproveInviteJoinNtfArgs class]) {
    defaultApproveInviteJoinNtfArgsInstance = [[ApproveInviteJoinNtfArgs alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultApproveInviteJoinNtfArgsInstance;
}
- (instancetype) defaultInstance {
  return defaultApproveInviteJoinNtfArgsInstance;
}
- (NSArray *)approveList {
  return approveListArray;
}
- (ApproveInviteJoinNtfArgsNtfItem*)approveListAtIndex:(NSUInteger)index {
  return [approveListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeString:1 value:self.groupId];
  }
  if (self.hasSourceUser) {
    [output writeString:2 value:self.sourceUser];
  }
  [self.approveListArray enumerateObjectsUsingBlock:^(ApproveInviteJoinNtfArgsNtfItem *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  if (self.hasGroupName) {
    [output writeString:4 value:self.groupName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeStringSize(1, self.groupId);
  }
  if (self.hasSourceUser) {
    size_ += computeStringSize(2, self.sourceUser);
  }
  [self.approveListArray enumerateObjectsUsingBlock:^(ApproveInviteJoinNtfArgsNtfItem *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  if (self.hasGroupName) {
    size_ += computeStringSize(4, self.groupName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ApproveInviteJoinNtfArgs*) parseFromData:(NSData*) data {
  return (ApproveInviteJoinNtfArgs*)[[[ApproveInviteJoinNtfArgs builder] mergeFromData:data] build];
}
+ (ApproveInviteJoinNtfArgs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveInviteJoinNtfArgs*)[[[ApproveInviteJoinNtfArgs builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ApproveInviteJoinNtfArgs*) parseFromInputStream:(NSInputStream*) input {
  return (ApproveInviteJoinNtfArgs*)[[[ApproveInviteJoinNtfArgs builder] mergeFromInputStream:input] build];
}
+ (ApproveInviteJoinNtfArgs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveInviteJoinNtfArgs*)[[[ApproveInviteJoinNtfArgs builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveInviteJoinNtfArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ApproveInviteJoinNtfArgs*)[[[ApproveInviteJoinNtfArgs builder] mergeFromCodedInputStream:input] build];
}
+ (ApproveInviteJoinNtfArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveInviteJoinNtfArgs*)[[[ApproveInviteJoinNtfArgs builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveInviteJoinNtfArgsBuilder*) builder {
  return [[ApproveInviteJoinNtfArgsBuilder alloc] init];
}
+ (ApproveInviteJoinNtfArgsBuilder*) builderWithPrototype:(ApproveInviteJoinNtfArgs*) prototype {
  return [[ApproveInviteJoinNtfArgs builder] mergeFrom:prototype];
}
- (ApproveInviteJoinNtfArgsBuilder*) builder {
  return [ApproveInviteJoinNtfArgs builder];
}
- (ApproveInviteJoinNtfArgsBuilder*) toBuilder {
  return [ApproveInviteJoinNtfArgs builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasSourceUser) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sourceUser", self.sourceUser];
  }
  [self.approveListArray enumerateObjectsUsingBlock:^(ApproveInviteJoinNtfArgsNtfItem *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"approveList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasGroupName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupName", self.groupName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ApproveInviteJoinNtfArgs class]]) {
    return NO;
  }
  ApproveInviteJoinNtfArgs *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasSourceUser == otherMessage.hasSourceUser &&
      (!self.hasSourceUser || [self.sourceUser isEqual:otherMessage.sourceUser]) &&
      [self.approveListArray isEqualToArray:otherMessage.approveListArray] &&
      self.hasGroupName == otherMessage.hasGroupName &&
      (!self.hasGroupName || [self.groupName isEqual:otherMessage.groupName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasSourceUser) {
    hashCode = hashCode * 31 + [self.sourceUser hash];
  }
  [self.approveListArray enumerateObjectsUsingBlock:^(ApproveInviteJoinNtfArgsNtfItem *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasGroupName) {
    hashCode = hashCode * 31 + [self.groupName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ApproveInviteJoinNtfArgsNtfItem ()
@property (strong) NSString* invitedUserId;
@property (strong) NSString* invitedGroupNickName;
@property (strong) NSString* invitedUserPortraitUrl;
@end

@implementation ApproveInviteJoinNtfArgsNtfItem

- (BOOL) hasInvitedUserId {
  return !!hasInvitedUserId_;
}
- (void) setHasInvitedUserId:(BOOL) _value_ {
  hasInvitedUserId_ = !!_value_;
}
@synthesize invitedUserId;
- (BOOL) hasInvitedGroupNickName {
  return !!hasInvitedGroupNickName_;
}
- (void) setHasInvitedGroupNickName:(BOOL) _value_ {
  hasInvitedGroupNickName_ = !!_value_;
}
@synthesize invitedGroupNickName;
- (BOOL) hasInvitedUserPortraitUrl {
  return !!hasInvitedUserPortraitUrl_;
}
- (void) setHasInvitedUserPortraitUrl:(BOOL) _value_ {
  hasInvitedUserPortraitUrl_ = !!_value_;
}
@synthesize invitedUserPortraitUrl;
- (instancetype) init {
  if ((self = [super init])) {
    self.invitedUserId = @"";
    self.invitedGroupNickName = @"";
    self.invitedUserPortraitUrl = @"";
  }
  return self;
}
static ApproveInviteJoinNtfArgsNtfItem* defaultApproveInviteJoinNtfArgsNtfItemInstance = nil;
+ (void) initialize {
  if (self == [ApproveInviteJoinNtfArgsNtfItem class]) {
    defaultApproveInviteJoinNtfArgsNtfItemInstance = [[ApproveInviteJoinNtfArgsNtfItem alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultApproveInviteJoinNtfArgsNtfItemInstance;
}
- (instancetype) defaultInstance {
  return defaultApproveInviteJoinNtfArgsNtfItemInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasInvitedUserId) {
    [output writeString:1 value:self.invitedUserId];
  }
  if (self.hasInvitedGroupNickName) {
    [output writeString:2 value:self.invitedGroupNickName];
  }
  if (self.hasInvitedUserPortraitUrl) {
    [output writeString:3 value:self.invitedUserPortraitUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasInvitedUserId) {
    size_ += computeStringSize(1, self.invitedUserId);
  }
  if (self.hasInvitedGroupNickName) {
    size_ += computeStringSize(2, self.invitedGroupNickName);
  }
  if (self.hasInvitedUserPortraitUrl) {
    size_ += computeStringSize(3, self.invitedUserPortraitUrl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ApproveInviteJoinNtfArgsNtfItem*) parseFromData:(NSData*) data {
  return (ApproveInviteJoinNtfArgsNtfItem*)[[[ApproveInviteJoinNtfArgsNtfItem builder] mergeFromData:data] build];
}
+ (ApproveInviteJoinNtfArgsNtfItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveInviteJoinNtfArgsNtfItem*)[[[ApproveInviteJoinNtfArgsNtfItem builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ApproveInviteJoinNtfArgsNtfItem*) parseFromInputStream:(NSInputStream*) input {
  return (ApproveInviteJoinNtfArgsNtfItem*)[[[ApproveInviteJoinNtfArgsNtfItem builder] mergeFromInputStream:input] build];
}
+ (ApproveInviteJoinNtfArgsNtfItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveInviteJoinNtfArgsNtfItem*)[[[ApproveInviteJoinNtfArgsNtfItem builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveInviteJoinNtfArgsNtfItem*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ApproveInviteJoinNtfArgsNtfItem*)[[[ApproveInviteJoinNtfArgsNtfItem builder] mergeFromCodedInputStream:input] build];
}
+ (ApproveInviteJoinNtfArgsNtfItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveInviteJoinNtfArgsNtfItem*)[[[ApproveInviteJoinNtfArgsNtfItem builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveInviteJoinNtfArgsNtfItemBuilder*) builder {
  return [[ApproveInviteJoinNtfArgsNtfItemBuilder alloc] init];
}
+ (ApproveInviteJoinNtfArgsNtfItemBuilder*) builderWithPrototype:(ApproveInviteJoinNtfArgsNtfItem*) prototype {
  return [[ApproveInviteJoinNtfArgsNtfItem builder] mergeFrom:prototype];
}
- (ApproveInviteJoinNtfArgsNtfItemBuilder*) builder {
  return [ApproveInviteJoinNtfArgsNtfItem builder];
}
- (ApproveInviteJoinNtfArgsNtfItemBuilder*) toBuilder {
  return [ApproveInviteJoinNtfArgsNtfItem builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasInvitedUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"invitedUserId", self.invitedUserId];
  }
  if (self.hasInvitedGroupNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"invitedGroupNickName", self.invitedGroupNickName];
  }
  if (self.hasInvitedUserPortraitUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"invitedUserPortraitUrl", self.invitedUserPortraitUrl];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ApproveInviteJoinNtfArgsNtfItem class]]) {
    return NO;
  }
  ApproveInviteJoinNtfArgsNtfItem *otherMessage = other;
  return
      self.hasInvitedUserId == otherMessage.hasInvitedUserId &&
      (!self.hasInvitedUserId || [self.invitedUserId isEqual:otherMessage.invitedUserId]) &&
      self.hasInvitedGroupNickName == otherMessage.hasInvitedGroupNickName &&
      (!self.hasInvitedGroupNickName || [self.invitedGroupNickName isEqual:otherMessage.invitedGroupNickName]) &&
      self.hasInvitedUserPortraitUrl == otherMessage.hasInvitedUserPortraitUrl &&
      (!self.hasInvitedUserPortraitUrl || [self.invitedUserPortraitUrl isEqual:otherMessage.invitedUserPortraitUrl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasInvitedUserId) {
    hashCode = hashCode * 31 + [self.invitedUserId hash];
  }
  if (self.hasInvitedGroupNickName) {
    hashCode = hashCode * 31 + [self.invitedGroupNickName hash];
  }
  if (self.hasInvitedUserPortraitUrl) {
    hashCode = hashCode * 31 + [self.invitedUserPortraitUrl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ApproveInviteJoinNtfArgsNtfItemBuilder()
@property (strong) ApproveInviteJoinNtfArgsNtfItem* resultNtfItem;
@end

@implementation ApproveInviteJoinNtfArgsNtfItemBuilder
@synthesize resultNtfItem;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultNtfItem = [[ApproveInviteJoinNtfArgsNtfItem alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultNtfItem;
}
- (ApproveInviteJoinNtfArgsNtfItemBuilder*) clear {
  self.resultNtfItem = [[ApproveInviteJoinNtfArgsNtfItem alloc] init];
  return self;
}
- (ApproveInviteJoinNtfArgsNtfItemBuilder*) clone {
  return [ApproveInviteJoinNtfArgsNtfItem builderWithPrototype:resultNtfItem];
}
- (ApproveInviteJoinNtfArgsNtfItem*) defaultInstance {
  return [ApproveInviteJoinNtfArgsNtfItem defaultInstance];
}
- (ApproveInviteJoinNtfArgsNtfItem*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ApproveInviteJoinNtfArgsNtfItem*) buildPartial {
  ApproveInviteJoinNtfArgsNtfItem* returnMe = resultNtfItem;
  self.resultNtfItem = nil;
  return returnMe;
}
- (ApproveInviteJoinNtfArgsNtfItemBuilder*) mergeFrom:(ApproveInviteJoinNtfArgsNtfItem*) other {
  if (other == [ApproveInviteJoinNtfArgsNtfItem defaultInstance]) {
    return self;
  }
  if (other.hasInvitedUserId) {
    [self setInvitedUserId:other.invitedUserId];
  }
  if (other.hasInvitedGroupNickName) {
    [self setInvitedGroupNickName:other.invitedGroupNickName];
  }
  if (other.hasInvitedUserPortraitUrl) {
    [self setInvitedUserPortraitUrl:other.invitedUserPortraitUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ApproveInviteJoinNtfArgsNtfItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ApproveInviteJoinNtfArgsNtfItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setInvitedUserId:[input readString]];
        break;
      }
      case 18: {
        [self setInvitedGroupNickName:[input readString]];
        break;
      }
      case 26: {
        [self setInvitedUserPortraitUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasInvitedUserId {
  return resultNtfItem.hasInvitedUserId;
}
- (NSString*) invitedUserId {
  return resultNtfItem.invitedUserId;
}
- (ApproveInviteJoinNtfArgsNtfItemBuilder*) setInvitedUserId:(NSString*) value {
  resultNtfItem.hasInvitedUserId = YES;
  resultNtfItem.invitedUserId = value;
  return self;
}
- (ApproveInviteJoinNtfArgsNtfItemBuilder*) clearInvitedUserId {
  resultNtfItem.hasInvitedUserId = NO;
  resultNtfItem.invitedUserId = @"";
  return self;
}
- (BOOL) hasInvitedGroupNickName {
  return resultNtfItem.hasInvitedGroupNickName;
}
- (NSString*) invitedGroupNickName {
  return resultNtfItem.invitedGroupNickName;
}
- (ApproveInviteJoinNtfArgsNtfItemBuilder*) setInvitedGroupNickName:(NSString*) value {
  resultNtfItem.hasInvitedGroupNickName = YES;
  resultNtfItem.invitedGroupNickName = value;
  return self;
}
- (ApproveInviteJoinNtfArgsNtfItemBuilder*) clearInvitedGroupNickName {
  resultNtfItem.hasInvitedGroupNickName = NO;
  resultNtfItem.invitedGroupNickName = @"";
  return self;
}
- (BOOL) hasInvitedUserPortraitUrl {
  return resultNtfItem.hasInvitedUserPortraitUrl;
}
- (NSString*) invitedUserPortraitUrl {
  return resultNtfItem.invitedUserPortraitUrl;
}
- (ApproveInviteJoinNtfArgsNtfItemBuilder*) setInvitedUserPortraitUrl:(NSString*) value {
  resultNtfItem.hasInvitedUserPortraitUrl = YES;
  resultNtfItem.invitedUserPortraitUrl = value;
  return self;
}
- (ApproveInviteJoinNtfArgsNtfItemBuilder*) clearInvitedUserPortraitUrl {
  resultNtfItem.hasInvitedUserPortraitUrl = NO;
  resultNtfItem.invitedUserPortraitUrl = @"";
  return self;
}
@end

@interface ApproveInviteJoinNtfArgsBuilder()
@property (strong) ApproveInviteJoinNtfArgs* resultApproveInviteJoinNtfArgs;
@end

@implementation ApproveInviteJoinNtfArgsBuilder
@synthesize resultApproveInviteJoinNtfArgs;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultApproveInviteJoinNtfArgs = [[ApproveInviteJoinNtfArgs alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultApproveInviteJoinNtfArgs;
}
- (ApproveInviteJoinNtfArgsBuilder*) clear {
  self.resultApproveInviteJoinNtfArgs = [[ApproveInviteJoinNtfArgs alloc] init];
  return self;
}
- (ApproveInviteJoinNtfArgsBuilder*) clone {
  return [ApproveInviteJoinNtfArgs builderWithPrototype:resultApproveInviteJoinNtfArgs];
}
- (ApproveInviteJoinNtfArgs*) defaultInstance {
  return [ApproveInviteJoinNtfArgs defaultInstance];
}
- (ApproveInviteJoinNtfArgs*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ApproveInviteJoinNtfArgs*) buildPartial {
  ApproveInviteJoinNtfArgs* returnMe = resultApproveInviteJoinNtfArgs;
  self.resultApproveInviteJoinNtfArgs = nil;
  return returnMe;
}
- (ApproveInviteJoinNtfArgsBuilder*) mergeFrom:(ApproveInviteJoinNtfArgs*) other {
  if (other == [ApproveInviteJoinNtfArgs defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasSourceUser) {
    [self setSourceUser:other.sourceUser];
  }
  if (other.approveListArray.count > 0) {
    if (resultApproveInviteJoinNtfArgs.approveListArray == nil) {
      resultApproveInviteJoinNtfArgs.approveListArray = [[NSMutableArray alloc] initWithArray:other.approveListArray];
    } else {
      [resultApproveInviteJoinNtfArgs.approveListArray addObjectsFromArray:other.approveListArray];
    }
  }
  if (other.hasGroupName) {
    [self setGroupName:other.groupName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ApproveInviteJoinNtfArgsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ApproveInviteJoinNtfArgsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setGroupId:[input readString]];
        break;
      }
      case 18: {
        [self setSourceUser:[input readString]];
        break;
      }
      case 26: {
        ApproveInviteJoinNtfArgsNtfItemBuilder* subBuilder = [ApproveInviteJoinNtfArgsNtfItem builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addApproveList:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        [self setGroupName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultApproveInviteJoinNtfArgs.hasGroupId;
}
- (NSString*) groupId {
  return resultApproveInviteJoinNtfArgs.groupId;
}
- (ApproveInviteJoinNtfArgsBuilder*) setGroupId:(NSString*) value {
  resultApproveInviteJoinNtfArgs.hasGroupId = YES;
  resultApproveInviteJoinNtfArgs.groupId = value;
  return self;
}
- (ApproveInviteJoinNtfArgsBuilder*) clearGroupId {
  resultApproveInviteJoinNtfArgs.hasGroupId = NO;
  resultApproveInviteJoinNtfArgs.groupId = @"";
  return self;
}
- (BOOL) hasSourceUser {
  return resultApproveInviteJoinNtfArgs.hasSourceUser;
}
- (NSString*) sourceUser {
  return resultApproveInviteJoinNtfArgs.sourceUser;
}
- (ApproveInviteJoinNtfArgsBuilder*) setSourceUser:(NSString*) value {
  resultApproveInviteJoinNtfArgs.hasSourceUser = YES;
  resultApproveInviteJoinNtfArgs.sourceUser = value;
  return self;
}
- (ApproveInviteJoinNtfArgsBuilder*) clearSourceUser {
  resultApproveInviteJoinNtfArgs.hasSourceUser = NO;
  resultApproveInviteJoinNtfArgs.sourceUser = @"";
  return self;
}
- (NSMutableArray *)approveList {
  return resultApproveInviteJoinNtfArgs.approveListArray;
}
- (ApproveInviteJoinNtfArgsNtfItem*)approveListAtIndex:(NSUInteger)index {
  return [resultApproveInviteJoinNtfArgs approveListAtIndex:index];
}
- (ApproveInviteJoinNtfArgsBuilder *)addApproveList:(ApproveInviteJoinNtfArgsNtfItem*)value {
  if (resultApproveInviteJoinNtfArgs.approveListArray == nil) {
    resultApproveInviteJoinNtfArgs.approveListArray = [[NSMutableArray alloc]init];
  }
  [resultApproveInviteJoinNtfArgs.approveListArray addObject:value];
  return self;
}
- (ApproveInviteJoinNtfArgsBuilder *)setApproveListArray:(NSArray *)array {
  resultApproveInviteJoinNtfArgs.approveListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (ApproveInviteJoinNtfArgsBuilder *)clearApproveList {
  resultApproveInviteJoinNtfArgs.approveListArray = nil;
  return self;
}
- (BOOL) hasGroupName {
  return resultApproveInviteJoinNtfArgs.hasGroupName;
}
- (NSString*) groupName {
  return resultApproveInviteJoinNtfArgs.groupName;
}
- (ApproveInviteJoinNtfArgsBuilder*) setGroupName:(NSString*) value {
  resultApproveInviteJoinNtfArgs.hasGroupName = YES;
  resultApproveInviteJoinNtfArgs.groupName = value;
  return self;
}
- (ApproveInviteJoinNtfArgsBuilder*) clearGroupName {
  resultApproveInviteJoinNtfArgs.hasGroupName = NO;
  resultApproveInviteJoinNtfArgs.groupName = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
