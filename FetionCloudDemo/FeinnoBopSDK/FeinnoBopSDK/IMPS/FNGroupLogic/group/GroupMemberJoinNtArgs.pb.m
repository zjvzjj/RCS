// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "GroupMemberJoinNtArgs.pb.h"

@implementation GroupMemberJoinNtArgsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [GroupMemberJoinNtArgsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface GroupMemberJoinNtArgs ()
@property (retain) NSString* groupId;
@property (retain) NSString* nickName;
@property (retain) NSString* userId;
@end

@implementation GroupMemberJoinNtArgs

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
- (BOOL) hasNickName {
  return !!hasNickName_;
}
- (void) setHasNickName:(BOOL) value_ {
  hasNickName_ = !!value_;
}
@synthesize nickName;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value_ {
  hasUserId_ = !!value_;
}
@synthesize userId;
- (void) dealloc {
  self.groupId = nil;
  self.nickName = nil;
  self.userId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.groupId = @"";
    self.nickName = @"";
    self.userId = @"";
  }
  return self;
}
static GroupMemberJoinNtArgs* defaultGroupMemberJoinNtArgsInstance = nil;
+ (void) initialize {
  if (self == [GroupMemberJoinNtArgs class]) {
    defaultGroupMemberJoinNtArgsInstance = [[GroupMemberJoinNtArgs alloc] init];
  }
}
+ (GroupMemberJoinNtArgs*) defaultInstance {
  return defaultGroupMemberJoinNtArgsInstance;
}
- (GroupMemberJoinNtArgs*) defaultInstance {
  return defaultGroupMemberJoinNtArgsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeString:1 value:self.groupId];
  }
  if (self.hasNickName) {
    [output writeString:2 value:self.nickName];
  }
  if (self.hasUserId) {
    [output writeString:3 value:self.userId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeStringSize(1, self.groupId);
  }
  if (self.hasNickName) {
    size_ += computeStringSize(2, self.nickName);
  }
  if (self.hasUserId) {
    size_ += computeStringSize(3, self.userId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GroupMemberJoinNtArgs*) parseFromData:(NSData*) data {
  return (GroupMemberJoinNtArgs*)[[[GroupMemberJoinNtArgs builder] mergeFromData:data] build];
}
+ (GroupMemberJoinNtArgs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupMemberJoinNtArgs*)[[[GroupMemberJoinNtArgs builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GroupMemberJoinNtArgs*) parseFromInputStream:(NSInputStream*) input {
  return (GroupMemberJoinNtArgs*)[[[GroupMemberJoinNtArgs builder] mergeFromInputStream:input] build];
}
+ (GroupMemberJoinNtArgs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupMemberJoinNtArgs*)[[[GroupMemberJoinNtArgs builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GroupMemberJoinNtArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GroupMemberJoinNtArgs*)[[[GroupMemberJoinNtArgs builder] mergeFromCodedInputStream:input] build];
}
+ (GroupMemberJoinNtArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupMemberJoinNtArgs*)[[[GroupMemberJoinNtArgs builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GroupMemberJoinNtArgs_Builder*) builder {
  return [[[GroupMemberJoinNtArgs_Builder alloc] init] autorelease];
}
+ (GroupMemberJoinNtArgs_Builder*) builderWithPrototype:(GroupMemberJoinNtArgs*) prototype {
  return [[GroupMemberJoinNtArgs builder] mergeFrom:prototype];
}
- (GroupMemberJoinNtArgs_Builder*) builder {
  return [GroupMemberJoinNtArgs builder];
}
- (GroupMemberJoinNtArgs_Builder*) toBuilder {
  return [GroupMemberJoinNtArgs builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickName", self.nickName];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GroupMemberJoinNtArgs class]]) {
    return NO;
  }
  GroupMemberJoinNtArgs *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasNickName == otherMessage.hasNickName &&
      (!self.hasNickName || [self.nickName isEqual:otherMessage.nickName]) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasNickName) {
    hashCode = hashCode * 31 + [self.nickName hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GroupMemberJoinNtArgs_Builder()
@property (retain) GroupMemberJoinNtArgs* result;
@end

@implementation GroupMemberJoinNtArgs_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GroupMemberJoinNtArgs alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GroupMemberJoinNtArgs_Builder*) clear {
  self.result = [[[GroupMemberJoinNtArgs alloc] init] autorelease];
  return self;
}
- (GroupMemberJoinNtArgs_Builder*) clone {
  return [GroupMemberJoinNtArgs builderWithPrototype:result];
}
- (GroupMemberJoinNtArgs*) defaultInstance {
  return [GroupMemberJoinNtArgs defaultInstance];
}
- (GroupMemberJoinNtArgs*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GroupMemberJoinNtArgs*) buildPartial {
  GroupMemberJoinNtArgs* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GroupMemberJoinNtArgs_Builder*) mergeFrom:(GroupMemberJoinNtArgs*) other {
  if (other == [GroupMemberJoinNtArgs defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasNickName) {
    [self setNickName:other.nickName];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GroupMemberJoinNtArgs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GroupMemberJoinNtArgs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setGroupId:[input readString]];
        break;
      }
      case 18: {
        [self setNickName:[input readString]];
        break;
      }
      case 26: {
        [self setUserId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (NSString*) groupId {
  return result.groupId;
}
- (GroupMemberJoinNtArgs_Builder*) setGroupId:(NSString*) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (GroupMemberJoinNtArgs_Builder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = @"";
  return self;
}
- (BOOL) hasNickName {
  return result.hasNickName;
}
- (NSString*) nickName {
  return result.nickName;
}
- (GroupMemberJoinNtArgs_Builder*) setNickName:(NSString*) value {
  result.hasNickName = YES;
  result.nickName = value;
  return self;
}
- (GroupMemberJoinNtArgs_Builder*) clearNickName {
  result.hasNickName = NO;
  result.nickName = @"";
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (NSString*) userId {
  return result.userId;
}
- (GroupMemberJoinNtArgs_Builder*) setUserId:(NSString*) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (GroupMemberJoinNtArgs_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = @"";
  return self;
}
@end

