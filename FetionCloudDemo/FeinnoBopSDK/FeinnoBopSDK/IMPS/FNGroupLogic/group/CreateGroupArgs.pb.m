// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "CreateGroupArgs.pb.h"
// @@protoc_insertion_point(imports)

@implementation CreateGroupArgsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [CreateGroupArgsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface CreateGroupArgs ()
@property (strong) NSString* groupName;
@property SInt32 groupType;
@property (strong) NSString* nickName;
@property SInt32 groupConfig;
@property (strong) NSString* groupPortraitUrl;
@end

@implementation CreateGroupArgs

- (BOOL) hasGroupName {
  return !!hasGroupName_;
}
- (void) setHasGroupName:(BOOL) _value_ {
  hasGroupName_ = !!_value_;
}
@synthesize groupName;
- (BOOL) hasGroupType {
  return !!hasGroupType_;
}
- (void) setHasGroupType:(BOOL) _value_ {
  hasGroupType_ = !!_value_;
}
@synthesize groupType;
- (BOOL) hasNickName {
  return !!hasNickName_;
}
- (void) setHasNickName:(BOOL) _value_ {
  hasNickName_ = !!_value_;
}
@synthesize nickName;
- (BOOL) hasGroupConfig {
  return !!hasGroupConfig_;
}
- (void) setHasGroupConfig:(BOOL) _value_ {
  hasGroupConfig_ = !!_value_;
}
@synthesize groupConfig;
- (BOOL) hasGroupPortraitUrl {
  return !!hasGroupPortraitUrl_;
}
- (void) setHasGroupPortraitUrl:(BOOL) _value_ {
  hasGroupPortraitUrl_ = !!_value_;
}
@synthesize groupPortraitUrl;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupName = @"";
    self.groupType = 0;
    self.nickName = @"";
    self.groupConfig = 0;
    self.groupPortraitUrl = @"";
  }
  return self;
}
static CreateGroupArgs* defaultCreateGroupArgsInstance = nil;
+ (void) initialize {
  if (self == [CreateGroupArgs class]) {
    defaultCreateGroupArgsInstance = [[CreateGroupArgs alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCreateGroupArgsInstance;
}
- (instancetype) defaultInstance {
  return defaultCreateGroupArgsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupName) {
    [output writeString:1 value:self.groupName];
  }
  if (self.hasGroupType) {
    [output writeInt32:2 value:self.groupType];
  }
  if (self.hasNickName) {
    [output writeString:3 value:self.nickName];
  }
  if (self.hasGroupConfig) {
    [output writeInt32:4 value:self.groupConfig];
  }
  if (self.hasGroupPortraitUrl) {
    [output writeString:5 value:self.groupPortraitUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupName) {
    size_ += computeStringSize(1, self.groupName);
  }
  if (self.hasGroupType) {
    size_ += computeInt32Size(2, self.groupType);
  }
  if (self.hasNickName) {
    size_ += computeStringSize(3, self.nickName);
  }
  if (self.hasGroupConfig) {
    size_ += computeInt32Size(4, self.groupConfig);
  }
  if (self.hasGroupPortraitUrl) {
    size_ += computeStringSize(5, self.groupPortraitUrl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CreateGroupArgs*) parseFromData:(NSData*) data {
  return (CreateGroupArgs*)[[[CreateGroupArgs builder] mergeFromData:data] build];
}
+ (CreateGroupArgs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupArgs*)[[[CreateGroupArgs builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupArgs*) parseFromInputStream:(NSInputStream*) input {
  return (CreateGroupArgs*)[[[CreateGroupArgs builder] mergeFromInputStream:input] build];
}
+ (CreateGroupArgs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupArgs*)[[[CreateGroupArgs builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateGroupArgs*)[[[CreateGroupArgs builder] mergeFromCodedInputStream:input] build];
}
+ (CreateGroupArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupArgs*)[[[CreateGroupArgs builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupArgsBuilder*) builder {
  return [[CreateGroupArgsBuilder alloc] init];
}
+ (CreateGroupArgsBuilder*) builderWithPrototype:(CreateGroupArgs*) prototype {
  return [[CreateGroupArgs builder] mergeFrom:prototype];
}
- (CreateGroupArgsBuilder*) builder {
  return [CreateGroupArgs builder];
}
- (CreateGroupArgsBuilder*) toBuilder {
  return [CreateGroupArgs builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupName", self.groupName];
  }
  if (self.hasGroupType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupType", [NSNumber numberWithInteger:self.groupType]];
  }
  if (self.hasNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickName", self.nickName];
  }
  if (self.hasGroupConfig) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupConfig", [NSNumber numberWithInteger:self.groupConfig]];
  }
  if (self.hasGroupPortraitUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupPortraitUrl", self.groupPortraitUrl];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CreateGroupArgs class]]) {
    return NO;
  }
  CreateGroupArgs *otherMessage = other;
  return
      self.hasGroupName == otherMessage.hasGroupName &&
      (!self.hasGroupName || [self.groupName isEqual:otherMessage.groupName]) &&
      self.hasGroupType == otherMessage.hasGroupType &&
      (!self.hasGroupType || self.groupType == otherMessage.groupType) &&
      self.hasNickName == otherMessage.hasNickName &&
      (!self.hasNickName || [self.nickName isEqual:otherMessage.nickName]) &&
      self.hasGroupConfig == otherMessage.hasGroupConfig &&
      (!self.hasGroupConfig || self.groupConfig == otherMessage.groupConfig) &&
      self.hasGroupPortraitUrl == otherMessage.hasGroupPortraitUrl &&
      (!self.hasGroupPortraitUrl || [self.groupPortraitUrl isEqual:otherMessage.groupPortraitUrl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupName) {
    hashCode = hashCode * 31 + [self.groupName hash];
  }
  if (self.hasGroupType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.groupType] hash];
  }
  if (self.hasNickName) {
    hashCode = hashCode * 31 + [self.nickName hash];
  }
  if (self.hasGroupConfig) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.groupConfig] hash];
  }
  if (self.hasGroupPortraitUrl) {
    hashCode = hashCode * 31 + [self.groupPortraitUrl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CreateGroupArgsBuilder()
@property (strong) CreateGroupArgs* resultCreateGroupArgs;
@end

@implementation CreateGroupArgsBuilder
@synthesize resultCreateGroupArgs;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCreateGroupArgs = [[CreateGroupArgs alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCreateGroupArgs;
}
- (CreateGroupArgsBuilder*) clear {
  self.resultCreateGroupArgs = [[CreateGroupArgs alloc] init];
  return self;
}
- (CreateGroupArgsBuilder*) clone {
  return [CreateGroupArgs builderWithPrototype:resultCreateGroupArgs];
}
- (CreateGroupArgs*) defaultInstance {
  return [CreateGroupArgs defaultInstance];
}
- (CreateGroupArgs*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateGroupArgs*) buildPartial {
  CreateGroupArgs* returnMe = resultCreateGroupArgs;
  self.resultCreateGroupArgs = nil;
  return returnMe;
}
- (CreateGroupArgsBuilder*) mergeFrom:(CreateGroupArgs*) other {
  if (other == [CreateGroupArgs defaultInstance]) {
    return self;
  }
  if (other.hasGroupName) {
    [self setGroupName:other.groupName];
  }
  if (other.hasGroupType) {
    [self setGroupType:other.groupType];
  }
  if (other.hasNickName) {
    [self setNickName:other.nickName];
  }
  if (other.hasGroupConfig) {
    [self setGroupConfig:other.groupConfig];
  }
  if (other.hasGroupPortraitUrl) {
    [self setGroupPortraitUrl:other.groupPortraitUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateGroupArgsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateGroupArgsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setGroupName:[input readString]];
        break;
      }
      case 16: {
        [self setGroupType:[input readInt32]];
        break;
      }
      case 26: {
        [self setNickName:[input readString]];
        break;
      }
      case 32: {
        [self setGroupConfig:[input readInt32]];
        break;
      }
      case 42: {
        [self setGroupPortraitUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupName {
  return resultCreateGroupArgs.hasGroupName;
}
- (NSString*) groupName {
  return resultCreateGroupArgs.groupName;
}
- (CreateGroupArgsBuilder*) setGroupName:(NSString*) value {
  resultCreateGroupArgs.hasGroupName = YES;
  resultCreateGroupArgs.groupName = value;
  return self;
}
- (CreateGroupArgsBuilder*) clearGroupName {
  resultCreateGroupArgs.hasGroupName = NO;
  resultCreateGroupArgs.groupName = @"";
  return self;
}
- (BOOL) hasGroupType {
  return resultCreateGroupArgs.hasGroupType;
}
- (SInt32) groupType {
  return resultCreateGroupArgs.groupType;
}
- (CreateGroupArgsBuilder*) setGroupType:(SInt32) value {
  resultCreateGroupArgs.hasGroupType = YES;
  resultCreateGroupArgs.groupType = value;
  return self;
}
- (CreateGroupArgsBuilder*) clearGroupType {
  resultCreateGroupArgs.hasGroupType = NO;
  resultCreateGroupArgs.groupType = 0;
  return self;
}
- (BOOL) hasNickName {
  return resultCreateGroupArgs.hasNickName;
}
- (NSString*) nickName {
  return resultCreateGroupArgs.nickName;
}
- (CreateGroupArgsBuilder*) setNickName:(NSString*) value {
  resultCreateGroupArgs.hasNickName = YES;
  resultCreateGroupArgs.nickName = value;
  return self;
}
- (CreateGroupArgsBuilder*) clearNickName {
  resultCreateGroupArgs.hasNickName = NO;
  resultCreateGroupArgs.nickName = @"";
  return self;
}
- (BOOL) hasGroupConfig {
  return resultCreateGroupArgs.hasGroupConfig;
}
- (SInt32) groupConfig {
  return resultCreateGroupArgs.groupConfig;
}
- (CreateGroupArgsBuilder*) setGroupConfig:(SInt32) value {
  resultCreateGroupArgs.hasGroupConfig = YES;
  resultCreateGroupArgs.groupConfig = value;
  return self;
}
- (CreateGroupArgsBuilder*) clearGroupConfig {
  resultCreateGroupArgs.hasGroupConfig = NO;
  resultCreateGroupArgs.groupConfig = 0;
  return self;
}
- (BOOL) hasGroupPortraitUrl {
  return resultCreateGroupArgs.hasGroupPortraitUrl;
}
- (NSString*) groupPortraitUrl {
  return resultCreateGroupArgs.groupPortraitUrl;
}
- (CreateGroupArgsBuilder*) setGroupPortraitUrl:(NSString*) value {
  resultCreateGroupArgs.hasGroupPortraitUrl = YES;
  resultCreateGroupArgs.groupPortraitUrl = value;
  return self;
}
- (CreateGroupArgsBuilder*) clearGroupPortraitUrl {
  resultCreateGroupArgs.hasGroupPortraitUrl = NO;
  resultCreateGroupArgs.groupPortraitUrl = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
