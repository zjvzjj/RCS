// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "LoginArgs.pb.h"
// @@protoc_insertion_point(imports)

@implementation LoginArgsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [LoginArgsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface LoginArgs ()
@property SInt32 loginType;
@property (strong) NSString* loginValue;
@property (strong) NSString* pwd;
@property (strong) NSString* machineCode;
@property SInt32 verifyCode;
@property (strong) NSString* sdkVersion;
@end

@implementation LoginArgs

- (BOOL) hasLoginType {
  return !!hasLoginType_;
}
- (void) setHasLoginType:(BOOL) _value_ {
  hasLoginType_ = !!_value_;
}
@synthesize loginType;
- (BOOL) hasLoginValue {
  return !!hasLoginValue_;
}
- (void) setHasLoginValue:(BOOL) _value_ {
  hasLoginValue_ = !!_value_;
}
@synthesize loginValue;
- (BOOL) hasPwd {
  return !!hasPwd_;
}
- (void) setHasPwd:(BOOL) _value_ {
  hasPwd_ = !!_value_;
}
@synthesize pwd;
- (BOOL) hasMachineCode {
  return !!hasMachineCode_;
}
- (void) setHasMachineCode:(BOOL) _value_ {
  hasMachineCode_ = !!_value_;
}
@synthesize machineCode;
- (BOOL) hasVerifyCode {
  return !!hasVerifyCode_;
}
- (void) setHasVerifyCode:(BOOL) _value_ {
  hasVerifyCode_ = !!_value_;
}
@synthesize verifyCode;
- (BOOL) hasSdkVersion {
  return !!hasSdkVersion_;
}
- (void) setHasSdkVersion:(BOOL) _value_ {
  hasSdkVersion_ = !!_value_;
}
@synthesize sdkVersion;
- (instancetype) init {
  if ((self = [super init])) {
    self.loginType = 0;
    self.loginValue = @"";
    self.pwd = @"";
    self.machineCode = @"";
    self.verifyCode = 0;
    self.sdkVersion = @"";
  }
  return self;
}
static LoginArgs* defaultLoginArgsInstance = nil;
+ (void) initialize {
  if (self == [LoginArgs class]) {
    defaultLoginArgsInstance = [[LoginArgs alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultLoginArgsInstance;
}
- (instancetype) defaultInstance {
  return defaultLoginArgsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLoginType) {
    [output writeInt32:1 value:self.loginType];
  }
  if (self.hasLoginValue) {
    [output writeString:2 value:self.loginValue];
  }
  if (self.hasPwd) {
    [output writeString:3 value:self.pwd];
  }
  if (self.hasMachineCode) {
    [output writeString:4 value:self.machineCode];
  }
  if (self.hasVerifyCode) {
    [output writeInt32:5 value:self.verifyCode];
  }
  if (self.hasSdkVersion) {
    [output writeString:6 value:self.sdkVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLoginType) {
    size_ += computeInt32Size(1, self.loginType);
  }
  if (self.hasLoginValue) {
    size_ += computeStringSize(2, self.loginValue);
  }
  if (self.hasPwd) {
    size_ += computeStringSize(3, self.pwd);
  }
  if (self.hasMachineCode) {
    size_ += computeStringSize(4, self.machineCode);
  }
  if (self.hasVerifyCode) {
    size_ += computeInt32Size(5, self.verifyCode);
  }
  if (self.hasSdkVersion) {
    size_ += computeStringSize(6, self.sdkVersion);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoginArgs*) parseFromData:(NSData*) data {
  return (LoginArgs*)[[[LoginArgs builder] mergeFromData:data] build];
}
+ (LoginArgs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginArgs*)[[[LoginArgs builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginArgs*) parseFromInputStream:(NSInputStream*) input {
  return (LoginArgs*)[[[LoginArgs builder] mergeFromInputStream:input] build];
}
+ (LoginArgs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginArgs*)[[[LoginArgs builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginArgs*)[[[LoginArgs builder] mergeFromCodedInputStream:input] build];
}
+ (LoginArgs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginArgs*)[[[LoginArgs builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginArgs_Builder*) builder {
  return [[LoginArgs_Builder alloc] init];
}
+ (LoginArgs_Builder*) builderWithPrototype:(LoginArgs*) prototype {
  return [[LoginArgs builder] mergeFrom:prototype];
}
- (LoginArgs_Builder*) builder {
  return [LoginArgs builder];
}
- (LoginArgs_Builder*) toBuilder {
  return [LoginArgs builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLoginType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"loginType", [NSNumber numberWithInteger:self.loginType]];
  }
  if (self.hasLoginValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"loginValue", self.loginValue];
  }
  if (self.hasPwd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pwd", self.pwd];
  }
  if (self.hasMachineCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"machineCode", self.machineCode];
  }
  if (self.hasVerifyCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"verifyCode", [NSNumber numberWithInteger:self.verifyCode]];
  }
  if (self.hasSdkVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sdkVersion", self.sdkVersion];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}

- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LoginArgs class]]) {
    return NO;
  }
  LoginArgs *otherMessage = other;
  return
      self.hasLoginType == otherMessage.hasLoginType &&
      (!self.hasLoginType || self.loginType == otherMessage.loginType) &&
      self.hasLoginValue == otherMessage.hasLoginValue &&
      (!self.hasLoginValue || [self.loginValue isEqual:otherMessage.loginValue]) &&
      self.hasPwd == otherMessage.hasPwd &&
      (!self.hasPwd || [self.pwd isEqual:otherMessage.pwd]) &&
      self.hasMachineCode == otherMessage.hasMachineCode &&
      (!self.hasMachineCode || [self.machineCode isEqual:otherMessage.machineCode]) &&
      self.hasVerifyCode == otherMessage.hasVerifyCode &&
      (!self.hasVerifyCode || self.verifyCode == otherMessage.verifyCode) &&
      self.hasSdkVersion == otherMessage.hasSdkVersion &&
      (!self.hasSdkVersion || [self.sdkVersion isEqual:otherMessage.sdkVersion]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasLoginType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.loginType] hash];
  }
  if (self.hasLoginValue) {
    hashCode = hashCode * 31 + [self.loginValue hash];
  }
  if (self.hasPwd) {
    hashCode = hashCode * 31 + [self.pwd hash];
  }
  if (self.hasMachineCode) {
    hashCode = hashCode * 31 + [self.machineCode hash];
  }
  if (self.hasVerifyCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.verifyCode] hash];
  }
  if (self.hasSdkVersion) {
    hashCode = hashCode * 31 + [self.sdkVersion hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LoginArgs_Builder()
@property (strong) LoginArgs* resultLoginArgs;
@end

@implementation LoginArgs_Builder
@synthesize resultLoginArgs;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLoginArgs = [[LoginArgs alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLoginArgs;
}
- (LoginArgs_Builder*) clear {
  self.resultLoginArgs = [[LoginArgs alloc] init];
  return self;
}
- (LoginArgs_Builder*) clone {
  return [LoginArgs builderWithPrototype:resultLoginArgs];
}
- (LoginArgs*) defaultInstance {
  return [LoginArgs defaultInstance];
}
- (LoginArgs*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginArgs*) buildPartial {
  LoginArgs* returnMe = resultLoginArgs;
  self.resultLoginArgs = nil;
  return returnMe;
}
- (LoginArgs_Builder*) mergeFrom:(LoginArgs*) other {
  if (other == [LoginArgs defaultInstance]) {
    return self;
  }
  if (other.hasLoginType) {
    [self setLoginType:other.loginType];
  }
  if (other.hasLoginValue) {
    [self setLoginValue:other.loginValue];
  }
  if (other.hasPwd) {
    [self setPwd:other.pwd];
  }
  if (other.hasMachineCode) {
    [self setMachineCode:other.machineCode];
  }
  if (other.hasVerifyCode) {
    [self setVerifyCode:other.verifyCode];
  }
  if (other.hasSdkVersion) {
    [self setSdkVersion:other.sdkVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginArgs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginArgs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setLoginType:[input readInt32]];
        break;
      }
      case 18: {
        [self setLoginValue:[input readString]];
        break;
      }
      case 26: {
        [self setPwd:[input readString]];
        break;
      }
      case 34: {
        [self setMachineCode:[input readString]];
        break;
      }
      case 40: {
        [self setVerifyCode:[input readInt32]];
        break;
      }
      case 50: {
        [self setSdkVersion:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasLoginType {
  return resultLoginArgs.hasLoginType;
}
- (SInt32) loginType {
  return resultLoginArgs.loginType;
}
- (LoginArgs_Builder*) setLoginType:(SInt32) value {
  resultLoginArgs.hasLoginType = YES;
  resultLoginArgs.loginType = value;
  return self;
}
- (LoginArgs_Builder*) clearLoginType {
  resultLoginArgs.hasLoginType = NO;
  resultLoginArgs.loginType = 0;
  return self;
}
- (BOOL) hasLoginValue {
  return resultLoginArgs.hasLoginValue;
}
- (NSString*) loginValue {
  return resultLoginArgs.loginValue;
}
- (LoginArgs_Builder*) setLoginValue:(NSString*) value {
  resultLoginArgs.hasLoginValue = YES;
  resultLoginArgs.loginValue = value;
  return self;
}
- (LoginArgs_Builder*) clearLoginValue {
  resultLoginArgs.hasLoginValue = NO;
  resultLoginArgs.loginValue = @"";
  return self;
}
- (BOOL) hasPwd {
  return resultLoginArgs.hasPwd;
}
- (NSString*) pwd {
  return resultLoginArgs.pwd;
}
- (LoginArgs_Builder*) setPwd:(NSString*) value {
  resultLoginArgs.hasPwd = YES;
  resultLoginArgs.pwd = value;
  return self;
}
- (LoginArgs_Builder*) clearPwd {
  resultLoginArgs.hasPwd = NO;
  resultLoginArgs.pwd = @"";
  return self;
}
- (BOOL) hasMachineCode {
  return resultLoginArgs.hasMachineCode;
}
- (NSString*) machineCode {
  return resultLoginArgs.machineCode;
}
- (LoginArgs_Builder*) setMachineCode:(NSString*) value {
  resultLoginArgs.hasMachineCode = YES;
  resultLoginArgs.machineCode = value;
  return self;
}
- (LoginArgs_Builder*) clearMachineCode {
  resultLoginArgs.hasMachineCode = NO;
  resultLoginArgs.machineCode = @"";
  return self;
}
- (BOOL) hasVerifyCode {
  return resultLoginArgs.hasVerifyCode;
}
- (SInt32) verifyCode {
  return resultLoginArgs.verifyCode;
}
- (LoginArgs_Builder*) setVerifyCode:(SInt32) value {
  resultLoginArgs.hasVerifyCode = YES;
  resultLoginArgs.verifyCode = value;
  return self;
}
- (LoginArgs_Builder*) clearVerifyCode {
  resultLoginArgs.hasVerifyCode = NO;
  resultLoginArgs.verifyCode = 0;
  return self;
}
- (BOOL) hasSdkVersion {
  return resultLoginArgs.hasSdkVersion;
}
- (NSString*) sdkVersion {
  return resultLoginArgs.sdkVersion;
}
- (LoginArgs_Builder*) setSdkVersion:(NSString*) value {
  resultLoginArgs.hasSdkVersion = YES;
  resultLoginArgs.sdkVersion = value;
  return self;
}
- (LoginArgs_Builder*) clearSdkVersion {
  resultLoginArgs.hasSdkVersion = NO;
  resultLoginArgs.sdkVersion = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
