// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "RegisterWithSmsRspRets.pb.h"

@implementation RegisterWithSmsRspRetsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [RegisterWithSmsRspRetsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface RegisterWithSmsRspRets ()
@property int32_t retCode;
@property (retain) NSString* bopUid;
@property (retain) NSString* securityKey;
@end

@implementation RegisterWithSmsRspRets

- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) value_ {
  hasRetCode_ = !!value_;
}
@synthesize retCode;
- (BOOL) hasBopUid {
  return !!hasBopUid_;
}
- (void) setHasBopUid:(BOOL) value_ {
  hasBopUid_ = !!value_;
}
@synthesize bopUid;
- (BOOL) hasSecurityKey {
  return !!hasSecurityKey_;
}
- (void) setHasSecurityKey:(BOOL) value_ {
  hasSecurityKey_ = !!value_;
}
@synthesize securityKey;
- (void) dealloc {
  self.bopUid = nil;
  self.securityKey = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.retCode = 0;
    self.bopUid = @"";
    self.securityKey = @"";
  }
  return self;
}
static RegisterWithSmsRspRets* defaultRegisterWithSmsRspRetsInstance = nil;
+ (void) initialize {
  if (self == [RegisterWithSmsRspRets class]) {
    defaultRegisterWithSmsRspRetsInstance = [[RegisterWithSmsRspRets alloc] init];
  }
}
+ (RegisterWithSmsRspRets*) defaultInstance {
  return defaultRegisterWithSmsRspRetsInstance;
}
- (RegisterWithSmsRspRets*) defaultInstance {
  return defaultRegisterWithSmsRspRetsInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetCode) {
    [output writeInt32:1 value:self.retCode];
  }
  if (self.hasBopUid) {
    [output writeString:2 value:self.bopUid];
  }
  if (self.hasSecurityKey) {
    [output writeString:3 value:self.securityKey];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRetCode) {
    size_ += computeInt32Size(1, self.retCode);
  }
  if (self.hasBopUid) {
    size_ += computeStringSize(2, self.bopUid);
  }
  if (self.hasSecurityKey) {
    size_ += computeStringSize(3, self.securityKey);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RegisterWithSmsRspRets*) parseFromData:(NSData*) data {
  return (RegisterWithSmsRspRets*)[[[RegisterWithSmsRspRets builder] mergeFromData:data] build];
}
+ (RegisterWithSmsRspRets*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegisterWithSmsRspRets*)[[[RegisterWithSmsRspRets builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RegisterWithSmsRspRets*) parseFromInputStream:(NSInputStream*) input {
  return (RegisterWithSmsRspRets*)[[[RegisterWithSmsRspRets builder] mergeFromInputStream:input] build];
}
+ (RegisterWithSmsRspRets*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegisterWithSmsRspRets*)[[[RegisterWithSmsRspRets builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RegisterWithSmsRspRets*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RegisterWithSmsRspRets*)[[[RegisterWithSmsRspRets builder] mergeFromCodedInputStream:input] build];
}
+ (RegisterWithSmsRspRets*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegisterWithSmsRspRets*)[[[RegisterWithSmsRspRets builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RegisterWithSmsRspRets_Builder*) builder {
  return [[[RegisterWithSmsRspRets_Builder alloc] init] autorelease];
}
+ (RegisterWithSmsRspRets_Builder*) builderWithPrototype:(RegisterWithSmsRspRets*) prototype {
  return [[RegisterWithSmsRspRets builder] mergeFrom:prototype];
}
- (RegisterWithSmsRspRets_Builder*) builder {
  return [RegisterWithSmsRspRets builder];
}
- (RegisterWithSmsRspRets_Builder*) toBuilder {
  return [RegisterWithSmsRspRets builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRetCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"retCode", [NSNumber numberWithInt:self.retCode]];
  }
  if (self.hasBopUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bopUid", self.bopUid];
  }
  if (self.hasSecurityKey) {
    [output appendFormat:@"%@%@: %@\n", indent, @"securityKey", self.securityKey];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RegisterWithSmsRspRets class]]) {
    return NO;
  }
  RegisterWithSmsRspRets *otherMessage = other;
  return
      self.hasRetCode == otherMessage.hasRetCode &&
      (!self.hasRetCode || self.retCode == otherMessage.retCode) &&
      self.hasBopUid == otherMessage.hasBopUid &&
      (!self.hasBopUid || [self.bopUid isEqual:otherMessage.bopUid]) &&
      self.hasSecurityKey == otherMessage.hasSecurityKey &&
      (!self.hasSecurityKey || [self.securityKey isEqual:otherMessage.securityKey]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasRetCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.retCode] hash];
  }
  if (self.hasBopUid) {
    hashCode = hashCode * 31 + [self.bopUid hash];
  }
  if (self.hasSecurityKey) {
    hashCode = hashCode * 31 + [self.securityKey hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RegisterWithSmsRspRets_Builder()
@property (retain) RegisterWithSmsRspRets* result;
@end

@implementation RegisterWithSmsRspRets_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RegisterWithSmsRspRets alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RegisterWithSmsRspRets_Builder*) clear {
  self.result = [[[RegisterWithSmsRspRets alloc] init] autorelease];
  return self;
}
- (RegisterWithSmsRspRets_Builder*) clone {
  return [RegisterWithSmsRspRets builderWithPrototype:result];
}
- (RegisterWithSmsRspRets*) defaultInstance {
  return [RegisterWithSmsRspRets defaultInstance];
}
- (RegisterWithSmsRspRets*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RegisterWithSmsRspRets*) buildPartial {
  RegisterWithSmsRspRets* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RegisterWithSmsRspRets_Builder*) mergeFrom:(RegisterWithSmsRspRets*) other {
  if (other == [RegisterWithSmsRspRets defaultInstance]) {
    return self;
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  if (other.hasBopUid) {
    [self setBopUid:other.bopUid];
  }
  if (other.hasSecurityKey) {
    [self setSecurityKey:other.securityKey];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RegisterWithSmsRspRets_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RegisterWithSmsRspRets_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setBopUid:[input readString]];
        break;
      }
      case 26: {
        [self setSecurityKey:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRetCode {
  return result.hasRetCode;
}
- (int32_t) retCode {
  return result.retCode;
}
- (RegisterWithSmsRspRets_Builder*) setRetCode:(int32_t) value {
  result.hasRetCode = YES;
  result.retCode = value;
  return self;
}
- (RegisterWithSmsRspRets_Builder*) clearRetCode {
  result.hasRetCode = NO;
  result.retCode = 0;
  return self;
}
- (BOOL) hasBopUid {
  return result.hasBopUid;
}
- (NSString*) bopUid {
  return result.bopUid;
}
- (RegisterWithSmsRspRets_Builder*) setBopUid:(NSString*) value {
  result.hasBopUid = YES;
  result.bopUid = value;
  return self;
}
- (RegisterWithSmsRspRets_Builder*) clearBopUid {
  result.hasBopUid = NO;
  result.bopUid = @"";
  return self;
}
- (BOOL) hasSecurityKey {
  return result.hasSecurityKey;
}
- (NSString*) securityKey {
  return result.securityKey;
}
- (RegisterWithSmsRspRets_Builder*) setSecurityKey:(NSString*) value {
  result.hasSecurityKey = YES;
  result.securityKey = value;
  return self;
}
- (RegisterWithSmsRspRets_Builder*) clearSecurityKey {
  result.hasSecurityKey = NO;
  result.securityKey = @"";
  return self;
}
@end

